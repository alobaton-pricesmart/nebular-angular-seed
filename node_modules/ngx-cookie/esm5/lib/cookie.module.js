/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CookieOptionsProvider, COOKIE_OPTIONS } from './cookie-options-provider';
import { CookieService } from './cookie.service';
import { cookieServiceFactory } from './cookie.factory';
var CookieModule = /** @class */ (function () {
    function CookieModule() {
    }
    /**
     * Use this method in your root module to provide the CookieService
     */
    /**
     * Use this method in your root module to provide the CookieService
     * @param {?=} options
     * @return {?}
     */
    CookieModule.forRoot = /**
     * Use this method in your root module to provide the CookieService
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: CookieModule,
            providers: [
                { provide: COOKIE_OPTIONS, useValue: options },
                { provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider] }
            ]
        };
    };
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     */
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     * @param {?=} options
     * @return {?}
     */
    CookieModule.forChild = /**
     * Use this method in your other (non root) modules to import the directive/pipe
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: CookieModule,
            providers: [
                { provide: COOKIE_OPTIONS, useValue: options },
                { provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider] }
            ]
        };
    };
    CookieModule.decorators = [
        { type: NgModule, args: [{
                    providers: [CookieOptionsProvider]
                },] }
    ];
    return CookieModule;
}());
export { CookieModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb29raWUvIiwic291cmNlcyI6WyJsaWIvY29va2llLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUV4RDtJQUFBO0lBNkJBLENBQUM7SUF6QkM7O09BRUc7Ozs7OztJQUNJLG9CQUFPOzs7OztJQUFkLFVBQWUsT0FBMkI7UUFBM0Isd0JBQUEsRUFBQSxZQUEyQjtRQUN4QyxPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVk7WUFDdEIsU0FBUyxFQUFFO2dCQUNULEVBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFDO2dCQUM1QyxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLG9CQUFvQixFQUFFLElBQUksRUFBRSxDQUFDLHFCQUFxQixDQUFDLEVBQUM7YUFDMUY7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSSxxQkFBUTs7Ozs7SUFBZixVQUFnQixPQUEyQjtRQUEzQix3QkFBQSxFQUFBLFlBQTJCO1FBQ3pDLE9BQU87WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUU7Z0JBQ1QsRUFBQyxPQUFPLEVBQUUsY0FBYyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUM7Z0JBQzVDLEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxFQUFFLENBQUMscUJBQXFCLENBQUMsRUFBQzthQUMxRjtTQUNGLENBQUM7SUFDSixDQUFDOztnQkE1QkYsUUFBUSxTQUFDO29CQUNSLFNBQVMsRUFBRSxDQUFDLHFCQUFxQixDQUFDO2lCQUNuQzs7SUEyQkQsbUJBQUM7Q0FBQSxBQTdCRCxJQTZCQztTQTFCWSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29va2llT3B0aW9uc1Byb3ZpZGVyLCBDT09LSUVfT1BUSU9OUyB9IGZyb20gJy4vY29va2llLW9wdGlvbnMtcHJvdmlkZXInO1xuaW1wb3J0IHsgQ29va2llU2VydmljZSB9IGZyb20gJy4vY29va2llLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29va2llT3B0aW9ucyB9IGZyb20gJy4vY29va2llLW9wdGlvbnMubW9kZWwnO1xuaW1wb3J0IHsgY29va2llU2VydmljZUZhY3RvcnkgfSBmcm9tICcuL2Nvb2tpZS5mYWN0b3J5JztcblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbQ29va2llT3B0aW9uc1Byb3ZpZGVyXVxufSlcbmV4cG9ydCBjbGFzcyBDb29raWVNb2R1bGUge1xuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIGluIHlvdXIgcm9vdCBtb2R1bGUgdG8gcHJvdmlkZSB0aGUgQ29va2llU2VydmljZVxuICAgKi9cbiAgc3RhdGljIGZvclJvb3Qob3B0aW9uczogQ29va2llT3B0aW9ucyA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBDb29raWVNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge3Byb3ZpZGU6IENPT0tJRV9PUFRJT05TLCB1c2VWYWx1ZTogb3B0aW9uc30sXG4gICAgICAgIHtwcm92aWRlOiBDb29raWVTZXJ2aWNlLCB1c2VGYWN0b3J5OiBjb29raWVTZXJ2aWNlRmFjdG9yeSwgZGVwczogW0Nvb2tpZU9wdGlvbnNQcm92aWRlcl19XG4gICAgICBdXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVc2UgdGhpcyBtZXRob2QgaW4geW91ciBvdGhlciAobm9uIHJvb3QpIG1vZHVsZXMgdG8gaW1wb3J0IHRoZSBkaXJlY3RpdmUvcGlwZVxuICAgKi9cbiAgc3RhdGljIGZvckNoaWxkKG9wdGlvbnM6IENvb2tpZU9wdGlvbnMgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQ29va2llTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtwcm92aWRlOiBDT09LSUVfT1BUSU9OUywgdXNlVmFsdWU6IG9wdGlvbnN9LFxuICAgICAgICB7cHJvdmlkZTogQ29va2llU2VydmljZSwgdXNlRmFjdG9yeTogY29va2llU2VydmljZUZhY3RvcnksIGRlcHM6IFtDb29raWVPcHRpb25zUHJvdmlkZXJdfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==