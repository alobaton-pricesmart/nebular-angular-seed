!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-multiselect-dropdown",["exports","@angular/core","@angular/forms","@angular/common"],t):t(e["ng-multiselect-dropdown"]={},e.ng.core,e.ng.forms,e.ng.common)}(this,function(e,t,i,n){"use strict";var s=function o(e){"string"==typeof e&&(this.id=this.text=e),"object"==typeof e&&(this.id=e.id,this.text=e.text)},l={provide:i.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return c}),multi:!0},r=function(){},c=function(){function e(e){this.cdr=e,this._data=[],this.selectedItems=[],this.isDropdownOpen=!0,this._placeholder="Select",this.filter=new s(this.data),this.defaultSettings={singleSelection:!1,idField:"id",textField:"text",enableCheckAll:!0,selectAllText:"Select All",unSelectAllText:"UnSelect All",allowSearchFilter:!1,limitSelection:-1,clearSearchFilter:!0,maxHeight:197,itemsShowLimit:999999999999,searchPlaceholderText:"Search",noDataAvailablePlaceholderText:"No data available",closeDropDownOnSelection:!1,showSelectedItemsAtTop:!1,defaultOpen:!1},this.disabled=!1,this.onFilterChange=new t.EventEmitter,this.onDropDownClose=new t.EventEmitter,this.onSelect=new t.EventEmitter,this.onDeSelect=new t.EventEmitter,this.onSelectAll=new t.EventEmitter,this.onDeSelectAll=new t.EventEmitter,this.onTouchedCallback=r,this.onChangeCallback=r}return Object.defineProperty(e.prototype,"placeholder",{set:function(e){this._placeholder=e||"Select"},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"settings",{set:function(e){this._settings=e?Object.assign(this.defaultSettings,e):Object.assign(this.defaultSettings)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"data",{set:function(e){var t=this;this._data=e?e.map(function(e){return new s("string"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField]})}):[]},enumerable:!0,configurable:!0}),e.prototype.onFilterTextChange=function(e){this.onFilterChange.emit(e)},e.prototype.onItemClick=function(e,t){if(this.disabled)return!1;var i=this.isSelected(t),n=-1===this._settings.limitSelection||0<this._settings.limitSelection&&this.selectedItems.length<this._settings.limitSelection;i?this.removeSelected(t):n&&this.addSelected(t),this._settings.singleSelection&&this._settings.closeDropDownOnSelection&&this.closeDropdown()},e.prototype.writeValue=function(e){var t=this;if(e!==undefined&&null!==e&&0<e.length)if(this._settings.singleSelection)try{if(1<=e.length){var i=e[0];this.selectedItems=[new s("string"==typeof i?i:{id:i[this._settings.idField],text:i[this._settings.textField]})]}}catch(o){}else{var n=e.map(function(e){return new s("string"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField]})});0<this._settings.limitSelection?this.selectedItems=n.splice(0,this._settings.limitSelection):this.selectedItems=n}else this.selectedItems=[];this.onChangeCallback(e)},e.prototype.registerOnChange=function(e){this.onChangeCallback=e},e.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},e.prototype.onTouched=function(){this.closeDropdown(),this.onTouchedCallback()},e.prototype.trackByFn=function(e,t){return t.id},e.prototype.isSelected=function(t){var i=!1;return this.selectedItems.forEach(function(e){t.id===e.id&&(i=!0)}),i},e.prototype.isLimitSelectionReached=function(){return this._settings.limitSelection===this.selectedItems.length},e.prototype.isAllItemsSelected=function(){return this._data.length===this.selectedItems.length},e.prototype.showButton=function(){return!this._settings.singleSelection&&!(0<this._settings.limitSelection)},e.prototype.itemShowRemaining=function(){return this.selectedItems.length-this._settings.itemsShowLimit},e.prototype.addSelected=function(e){this._settings.singleSelection&&(this.selectedItems=[]),this.selectedItems.push(e),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onSelect.emit(this.emittedValue(e))},e.prototype.removeSelected=function(t){var i=this;this.selectedItems.forEach(function(e){t.id===e.id&&i.selectedItems.splice(i.selectedItems.indexOf(e),1)}),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onDeSelect.emit(this.emittedValue(t))},e.prototype.emittedValue=function(e){var t=this,i=[];if(Array.isArray(e))e.map(function(e){e.id===e.text?i.push(e.text):i.push(t.objectify(e))});else if(e)return e.id===e.text?e.text:this.objectify(e);return i},e.prototype.objectify=function(e){var t={};return t[this._settings.idField]=e.id,t[this._settings.textField]=e.text,t},e.prototype.toggleDropdown=function(e){e.preventDefault(),this.disabled&&this._settings.singleSelection||(this._settings.defaultOpen=!this._settings.defaultOpen,this._settings.defaultOpen||this.onDropDownClose.emit())},e.prototype.closeDropdown=function(){this._settings.defaultOpen=!1,this._settings.clearSearchFilter&&(this.filter.text=""),this.onDropDownClose.emit()},e.prototype.toggleSelectAll=function(){if(this.disabled)return!1;this.isAllItemsSelected()?(this.selectedItems=[],this.onDeSelectAll.emit(this.emittedValue(this.selectedItems))):(this.selectedItems=this._data.slice(),this.onSelectAll.emit(this.emittedValue(this.selectedItems))),this.onChangeCallback(this.emittedValue(this.selectedItems))},e.decorators=[{type:t.Component,args:[{selector:"ng-multiselect-dropdown",template:'<div tabindex="=0" (blur)="onTouched()" class="multiselect-dropdown" (clickOutside)="closeDropdown()">\n  <div [class.disabled]="disabled">\n    <span tabindex="-1" class="dropdown-btn" (click)="toggleDropdown($event)">\n      <span *ngIf="selectedItems.length == 0">{{_placeholder}}</span>\n      <span class="selected-item" *ngFor="let item of selectedItems;trackBy: trackByFn;let k = index" [hidden]="k > _settings.itemsShowLimit-1">\n        {{item.text}}\n        <a style="padding-top:2px;padding-left:2px;color:white" (click)="onItemClick($event,item)">x</a>\n      </span>\n      <span style="float:right !important;padding-right:4px">\n        <span style="padding-right: 6px;" *ngIf="itemShowRemaining()>0">+{{itemShowRemaining()}}</span>\n        <span [ngClass]="_settings.defaultOpen ? \'dropdown-up\' : \'dropdown-down\'"></span>\n      </span>\n    </span>\n  </div>\n  <div class="dropdown-list" [hidden]="!_settings.defaultOpen">\n    <ul class="item1">\n      <li (click)="toggleSelectAll()" *ngIf="_data.length > 0 && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1" class="multiselect-item-checkbox" style="border-bottom: 1px solid #ccc;padding:10px">\n        <input type="checkbox" aria-label="multiselect-select-all" [checked]="isAllItemsSelected()" [disabled]="disabled || isLimitSelectionReached()" />\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\n      </li>\n      <li class="filter-textbox" *ngIf="_data.length>0 && _settings.allowSearchFilter">\n        <input type="text" aria-label="multiselect-search" [readOnly]="disabled" [placeholder]="_settings.searchPlaceholderText" [(ngModel)]="filter.text" (ngModelChange)="onFilterTextChange($event)">\n      </li>\n    </ul>\n    <ul class="item2" [style.maxHeight]="_settings.maxHeight+\'px\'">\n      <li *ngFor="let item of _data | ng2ListFilter:filter; let i = index;" (click)="onItemClick($event,item)" class="multiselect-item-checkbox">\n        <input type="checkbox" aria-label="multiselect-item" [checked]="isSelected(item)" [disabled]="disabled || (isLimitSelectionReached() && !isSelected(item))" />\n        <div>{{item.text}}</div>\n      </li>\n      <li class=\'no-data\' *ngIf="_data.length == 0">\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\n      </li>\n    </ul>\n  </div>\n</div>',styles:[".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-down{display:inline-block;top:10px;width:0;height:0;border-top:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .dropdown-btn .dropdown-up{display:inline-block;width:0;height:0;border-bottom:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:'';color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:all .4s ease}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:'';position:absolute;-webkit-transform:scale(0);transform:scale(0);-webkit-transform-origin:50%;transform-origin:50%;transition:-webkit-transform .2s ease-out;transition:transform .2s ease-out;transition:transform .2s ease-out,-webkit-transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;-webkit-transform:rotate(-45deg) scale(0);transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:'';transition:-webkit-transform .2s ease-out;transition:transform .2s ease-out;transition:transform .2s ease-out,-webkit-transform .2s ease-out;-webkit-transform:rotate(-45deg) scale(1);transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}"],providers:[l],changeDetection:t.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},e.propDecorators={placeholder:[{type:t.Input}],disabled:[{type:t.Input}],settings:[{type:t.Input}],data:[{type:t.Input}],onFilterChange:[{type:t.Output,args:["onFilterChange"]}],onDropDownClose:[{type:t.Output,args:["onDropDownClose"]}],onSelect:[{type:t.Output,args:["onSelect"]}],onDeSelect:[{type:t.Output,args:["onDeSelect"]}],onSelectAll:[{type:t.Output,args:["onSelectAll"]}],onDeSelectAll:[{type:t.Output,args:["onDeSelectAll"]}],onTouched:[{type:t.HostListener,args:["blur"]}]},e}(),d=function(){function e(e){this._elementRef=e,this.clickOutside=new t.EventEmitter}return e.prototype.onClick=function(e,t){t&&(this._elementRef.nativeElement.contains(t)||this.clickOutside.emit(e))},e.decorators=[{type:t.Directive,args:[{selector:"[clickOutside]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={clickOutside:[{type:t.Output}],onClick:[{type:t.HostListener,args:["document:click",["$event","$event.target"]]}]},e}(),a=function(){function e(){}return e.prototype.transform=function(e,t){var i=this;return e&&t?e.filter(function(e){return i.applyFilter(e,t)}):e},e.prototype.applyFilter=function(e,t){return!(t.text&&e.text&&-1===e.text.toLowerCase().indexOf(t.text.toLowerCase()))},e.decorators=[{type:t.Pipe,args:[{name:"ng2ListFilter",pure:!1}]}],e}(),p=function(){function e(){}return e.forRoot=function(){return{ngModule:e}},e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,i.FormsModule],declarations:[c,d,a],exports:[c]}]}],e}();e.MultiSelectComponent=c,e.NgMultiSelectDropDownModule=p,e.ɵb=d,e.ɵc=a,e.ɵa=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-multiselect-dropdown.umd.min.js.map