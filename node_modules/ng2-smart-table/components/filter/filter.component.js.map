{"version":3,"file":"filter.component.js","sourceRoot":"","sources":["../../../../src/ng2-smart-table/components/filter/filter.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAA4B,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;;IAyBZ,mCAAa;;;sBAChC,EAAE;;;IAGlB,qCAAW,GAAX,UAAY,OAAsB;QAAlC,iBAqBC;QApBC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;aACnC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,WAAW;gBAClE,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;gBAC3C,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxE,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;iBAIjB;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7E,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAM,EAAE,CAAM;wBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC9B,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;yBACvB;qBACF,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;SACJ;KACF;;gBA/CF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,SAAS,EAAE,CAAC,yBAAyB,CAAC;oBACtC,QAAQ,EAAE,u0BAiBP;iBACJ;;0BAzBD;EA0BqC,aAAa;SAArC,eAAe","sourcesContent":["import { Component, OnChanges, SimpleChanges } from '@angular/core';\nimport { FilterDefault } from './filter-default';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ng2-smart-table-filter',\n  styleUrls: ['./filter.component.scss'],\n  template: `\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `,\n})\nexport class FilterComponent extends FilterDefault implements OnChanges {\n  query: string = '';\n  protected dataChangedSub: Subscription;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n        const filterConf = this.source.getFilter();\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n          this.query = '';\n\n          // add a check for existing filters an set the query if one exists for this column\n          // this covers instances where the filter is set by user code while maintaining existing functionality\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n          filterConf.filters.forEach((k: any, v: any) => {\n            if (k.field == this.column.id) {\n              this.query = k.search;\n            }\n          });\n        }\n      });\n    }\n  }\n}\n"]}