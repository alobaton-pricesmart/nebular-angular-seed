{"version":3,"file":"ng2-smart-table.component.js","sourceRoot":"","sources":["../../src/ng2-smart-table/ng2-smart-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges } from '@angular/core';\n\nimport { Grid } from './lib/grid';\nimport { DataSource } from './lib/data-source/data-source';\nimport { Row } from './lib/data-set/row';\nimport { deepExtend } from './lib/helpers';\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\n\n@Component({\n  selector: 'ng2-smart-table',\n  styleUrls: ['./ng2-smart-table.component.scss'],\n  templateUrl: './ng2-smart-table.component.html',\n})\nexport class Ng2SmartTableComponent implements OnChanges {\n\n  @Input() source: any;\n  @Input() settings: Object = {};\n\n  @Output() rowSelect = new EventEmitter<any>();\n  @Output() userRowSelect = new EventEmitter<any>();\n  @Output() delete = new EventEmitter<any>();\n  @Output() edit = new EventEmitter<any>();\n  @Output() create = new EventEmitter<any>();\n  @Output() custom = new EventEmitter<any>();\n  @Output() deleteConfirm = new EventEmitter<any>();\n  @Output() editConfirm = new EventEmitter<any>();\n  @Output() createConfirm = new EventEmitter<any>();\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\n\n  tableClass: string;\n  tableId: string;\n  perPageSelect: any;\n  isHideHeader: boolean;\n  isHideSubHeader: boolean;\n  isPagerDisplay: boolean;\n  rowClassFunction: Function;\n\n\n  grid: Grid;\n  defaultSettings: Object = {\n    mode: 'inline', // inline|external|click-to-edit\n    selectMode: 'single', // single|multi\n    hideHeader: false,\n    hideSubHeader: false,\n    actions: {\n      columnTitle: 'Actions',\n      add: true,\n      edit: true,\n      delete: true,\n      custom: [],\n      position: 'left', // left|right\n    },\n    filter: {\n      inputClass: '',\n    },\n    edit: {\n      inputClass: '',\n      editButtonContent: 'Edit',\n      saveButtonContent: 'Update',\n      cancelButtonContent: 'Cancel',\n      confirmSave: false,\n    },\n    add: {\n      inputClass: '',\n      addButtonContent: 'Add New',\n      createButtonContent: 'Create',\n      cancelButtonContent: 'Cancel',\n      confirmCreate: false,\n    },\n    delete: {\n      deleteButtonContent: 'Delete',\n      confirmDelete: false,\n    },\n    attr: {\n      id: '',\n      class: '',\n    },\n    noDataMessage: 'No data found',\n    columns: {},\n    pager: {\n      display: true,\n      perPage: 10,\n    },\n    rowClassFunction: () => \"\"\n  };\n\n  isAllSelected: boolean = false;\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (this.grid) {\n      if (changes['settings']) {\n        this.grid.setSettings(this.prepareSettings());\n      }\n      if (changes['source']) {\n        this.source = this.prepareSource();\n        this.grid.setSource(this.source);\n      }\n    } else {\n      this.initGrid();\n    }\n    this.tableId = this.grid.getSetting('attr.id');\n    this.tableClass = this.grid.getSetting('attr.class');\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n  }\n\n  editRowSelect(row: Row) {\n    if (this.grid.getSetting('selectMode') === 'multi') {\n      this.onMultipleSelectRow(row);\n    } else {\n      this.onSelectRow(row);\n    }\n  }\n\n  onUserSelectRow(row: Row) {\n    if (this.grid.getSetting('selectMode') !== 'multi') {\n      this.grid.selectRow(row);\n      this.emitUserSelectRow(row);\n      this.emitSelectRow(row);\n    }\n  }\n\n  onRowHover(row: Row) {\n    this.rowHover.emit(row);\n  }\n\n  multipleSelectRow(row: Row) {\n    this.grid.multipleSelectRow(row);\n    this.emitUserSelectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onSelectAllRows($event: any) {\n    this.isAllSelected = !this.isAllSelected;\n    this.grid.selectAllRows(this.isAllSelected);\n\n    this.emitUserSelectRow(null);\n    this.emitSelectRow(null);\n  }\n\n  onSelectRow(row: Row) {\n    this.grid.selectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onMultipleSelectRow(row: Row) {\n    this.emitSelectRow(row);\n  }\n\n  initGrid() {\n    this.source = this.prepareSource();\n    this.grid = new Grid(this.source, this.prepareSettings());\n    this.grid.onSelectRow().subscribe((row) => this.emitSelectRow(row));\n  }\n\n  prepareSource(): DataSource {\n    if (this.source instanceof DataSource) {\n      return this.source;\n    } else if (this.source instanceof Array) {\n      return new LocalDataSource(this.source);\n    }\n\n    return new LocalDataSource();\n  }\n\n  prepareSettings(): Object {\n    return deepExtend({}, this.defaultSettings, this.settings);\n  }\n\n  changePage($event: any) {\n    this.resetAllSelector();\n  }\n\n  sort($event: any) {\n    this.resetAllSelector();\n  }\n\n  filter($event: any) {\n    this.resetAllSelector();\n  }\n\n  private resetAllSelector() {\n    this.isAllSelected = false;\n  }\n\n  private emitUserSelectRow(row: Row) {\n    const selectedRows = this.grid.getSelectedRows();\n\n    this.userRowSelect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\n    });\n  }\n\n  private emitSelectRow(row: Row) {\n    this.rowSelect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n    });\n  }\n\n}\n"]}