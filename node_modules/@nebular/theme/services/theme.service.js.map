{"version":3,"file":"theme.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/theme.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable } from '@angular/core';\n\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { map, filter, pairwise, distinctUntilChanged, startWith, share } from 'rxjs/operators';\n\nimport { NB_THEME_OPTIONS } from '../theme.options';\nimport { NbJSThemeOptions } from './js-themes/theme.options';\nimport { NbJSThemesRegistry } from './js-themes-registry.service';\nimport { NbMediaBreakpointsService, NbMediaBreakpoint } from './breakpoints.service';\n\n/**\n * Main Nebular service. Includes various helper methods.\n */\n@Injectable()\nexport class NbThemeService {\n\n  // TODO: behavioral subject here?\n  currentTheme: string;\n  private themeChanges$ = new ReplaySubject(1);\n  private appendLayoutClass$ = new Subject();\n  private removeLayoutClass$ = new Subject();\n  private changeWindowWidth$ = new ReplaySubject<number>(2);\n\n  constructor(@Inject(NB_THEME_OPTIONS) protected options: any,\n              private breakpointService: NbMediaBreakpointsService,\n              private jsThemesRegistry: NbJSThemesRegistry) {\n    if (options && options.name) {\n      this.changeTheme(options.name);\n    }\n  }\n\n  /**\n   * Change current application theme\n   * @param {string} name\n   */\n  changeTheme(name: string): void {\n    this.themeChanges$.next({ name, previous: this.currentTheme });\n    this.currentTheme = name;\n  }\n\n  changeWindowWidth(width: number): void {\n    this.changeWindowWidth$.next(width);\n  }\n\n  /**\n   * Returns a theme object with variables (color/paddings/etc) on a theme change.\n   * Once subscribed - returns current theme.\n   *\n   * @returns {Observable<NbJSThemeOptions>}\n   */\n  getJsTheme(): Observable<NbJSThemeOptions> {\n    return this.onThemeChange().pipe(\n      map((theme: any) => {\n        return this.jsThemesRegistry.get(theme.name);\n      }),\n    );\n  }\n\n  /**\n   * Triggers media query breakpoint change\n   * Returns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\n   * ```ts\n   *  [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\n   * ```\n   * @returns {Observable<[NbMediaBreakpoint, NbMediaBreakpoint]>}\n   */\n  onMediaQueryChange(): Observable<NbMediaBreakpoint[]> {\n    return this.changeWindowWidth$\n      .pipe(\n        startWith(undefined),\n        pairwise(),\n        map(([prevWidth, width]: [number, number]) => {\n          return [\n            this.breakpointService.getByWidth(prevWidth),\n            this.breakpointService.getByWidth(width),\n          ]\n        }),\n        filter(([prevPoint, point]: [NbMediaBreakpoint, NbMediaBreakpoint]) => {\n          return prevPoint.name !== point.name;\n        }),\n        distinctUntilChanged(null, params => params[0].name + params[1].name),\n        share(),\n      );\n  }\n\n  /**\n   * Triggered when current theme is changed\n   * @returns {Observable<any>}\n   */\n  onThemeChange(): Observable<any> {\n    return this.themeChanges$.pipe(share());\n  }\n\n  /**\n   * Append a class to nb-layout\n   * @param {string} className\n   */\n  appendLayoutClass(className: string) {\n    this.appendLayoutClass$.next(className);\n  }\n\n  /**\n   * Triggered when a new class is added to nb-layout through `appendLayoutClass` method\n   * @returns {Observable<any>}\n   */\n  onAppendLayoutClass(): Observable<any> {\n    return this.appendLayoutClass$.pipe(share());\n  }\n\n  /**\n   * Removes a class from nb-layout\n   * @param {string} className\n   */\n  removeLayoutClass(className: string) {\n    this.removeLayoutClass$.next(className);\n  }\n\n  /**\n   * Triggered when a class is removed from nb-layout through `removeLayoutClass` method\n   * @returns {Observable<any>}\n   */\n  onRemoveLayoutClass(): Observable<any> {\n    return this.removeLayoutClass$.pipe(share());\n  }\n}\n"]}