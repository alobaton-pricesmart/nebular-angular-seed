{"version":3,"file":"context-menu.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/context-menu/context-menu.directive.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAGL,SAAS,EACT,UAAU,EACV,KAAK,GAIN,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAEnD,OAAO,EAEL,YAAY,EACZ,gBAAgB,EAEhB,uBAAuB,EAEvB,UAAU,EACV,SAAS,GACV,MAAM,QAAQ,CAAC;AAChB,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAc,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAEjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA0EK;AAKL;IA+CE,gCAAoB,OAAmB,EACnB,WAA0B,EAC1B,qBAA8C;QAF9C,YAAO,GAAP,OAAO,CAAY;QACnB,gBAAW,GAAX,WAAW,CAAe;QAC1B,0BAAqB,GAArB,qBAAqB,CAAyB;QA/ClE;;;aAGK;QAEL,aAAQ,GAAe,UAAU,CAAC,MAAM,CAAC;QAEzC;;;;aAIK;QAEL,eAAU,GAAiB,YAAY,CAAC,SAAS,CAAC;QAiBlD;;;aAGK;QAEL,YAAO,GAAc,SAAS,CAAC,KAAK,CAAC;QAK3B,UAAK,GAAY,IAAI,CAAC;QACxB,WAAM,GAAiB,EAAE,CAAC;IAOlC,CAAC;IAvBD,sBAAI,yCAAK;QAJT;;aAEK;aAEL,UAAU,KAAmB;YAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAAA;IAAA,CAAC;IAsBF,yCAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB;aACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;aAClB,aAAa,CAAC,sBAAsB,CAAC,CAAC;IAC3C,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE;aACjD,KAAK,EAAE,CAAC;QACX,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,wCAAO,GAAP;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE;aACjD,OAAO,EAAE,CAAC;IACf,CAAC;IAED,qCAAI,GAAJ;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,qCAAI,GAAJ;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;IACvC,CAAC;IAES,wDAAuB,GAAjC;QACE,OAAO,IAAI,CAAC,qBAAqB;aAC9B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;aACvB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;aACrB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;aAC3B,OAAO,CAAC;YACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC,CAAC;IACP,CAAC;IAED;;;SAGK;IACG,8CAAa,GAArB,UAAsB,KAAmB;QACvC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3B,MAAM,KAAK,CAAC,6CAA2C,KAAO,CAAC,CAAA;SAChE;IACH,CAAC;IAEO,qDAAoB,GAA5B;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,IAAI,CACH,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,EAC3B,MAAM,CAAC,UAAC,EAAO;gBAAL,YAAG;YAAO,OAAA,GAAG,KAAK,KAAI,CAAC,GAAG;QAAhB,CAAgB,CAAC,CACtC;aACA,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;IAClC,CAAC;IA/GD;QADC,KAAK,CAAC,wBAAwB,CAAC;;4DACS;IAQzC;QADC,KAAK,CAAC,yBAAyB,CAAC;;8DACiB;IAMlD;QADC,KAAK,CAAC,kBAAkB,CAAC;;uDACd;IAMZ;QADC,KAAK,CAAC,eAAe,CAAC;;;uDAItB;IAOD;QADC,KAAK,CAAC,sBAAsB,CAAC;;2DACO;IArC1B,sBAAsB;QAJlC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,uBAAuB,EAAE,gBAAgB,CAAC;SACvD,CAAC;yCAgD6B,UAAU;YACN,aAAa;YACH,uBAAuB;OAjDvD,sBAAsB,CAuHlC;IAAD,6BAAC;CAAA,AAvHD,IAuHC;SAvHY,sBAAsB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { filter, takeWhile } from 'rxjs/operators';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbDynamicOverlay,\n  NbDynamicOverlayController,\n  NbDynamicOverlayHandler,\n  NbOverlayRef,\n  NbPosition,\n  NbTrigger,\n} from '../cdk';\nimport { NbContextMenuComponent } from './context-menu.component';\nimport { NbMenuItem, NbMenuService } from '../menu/menu.service';\n\n/**\n * Full featured context menu directive.\n *\n * @stacked-example(Showcase, context-menu/context-menu-showcase.component)\n *\n * Just pass menu items array:\n *\n * ```html\n * <button [nbContextMenu]=\"items\"></button>\n * ...\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * ### Installation\n *\n * Import `NbContextMenuModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbContextMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to handle context menu clicks you have to pass `nbContextMenuTag`\n * param and register to events using NbMenuService.\n * `NbContextMenu` renders plain `NbMenu` inside, so\n * you have to work with it just like with `NbMenu` component:\n *\n * @stacked-example(Menu item click, context-menu/context-menu-click.component)\n *\n * Context menu has different placements, such as: top, bottom, left and right\n * which can be used as following:\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuPlacement=\"right\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n *\n * By default context menu will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change position of the context menu.\n * If you wanna disable this behaviour just set it falsy value.\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuAdjustment=\"counterclockwise\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * Context menu has a number of triggers which provides an ability to show and hide the component in different ways:\n *\n * - Click mode shows the component when a user clicks on the host element and hides when the user clicks\n * somewhere on the document outside the component.\n * - Hint provides capability to show the component when the user hovers over the host element\n * and hide when the user hovers out of the host.\n * - Hover works like hint mode with one exception - when the user moves mouse from host element to\n * the container element the component remains open, so that it is possible to interact with it content.\n * - Focus mode is applied when user focuses the element.\n * - Noop mode - the component won't react to the user interaction.\n *\n * @stacked-example(Available Triggers, context-menu/context-menu-modes.component.html)\n *\n * Noop mode is especially useful when you need to control Popover programmatically, for example show/hide\n * as a result of some third-party action, like HTTP request or validation check:\n *\n * @stacked-example(Manual Control, context-menu/context-menu-noop.component)\n *\n * @stacked-example(Manual Control, context-menu/context-menu-right-click.component)\n * */\n@Directive({\n  selector: '[nbContextMenu]',\n  providers: [NbDynamicOverlayHandler, NbDynamicOverlay],\n})\nexport class NbContextMenuDirective implements NbDynamicOverlayController, OnChanges, AfterViewInit, OnDestroy, OnInit {\n\n  /**\n   * Position will be calculated relatively host element based on the position.\n   * Can be top, right, bottom and left.\n   * */\n  @Input('nbContextMenuPlacement')\n  position: NbPosition = NbPosition.BOTTOM;\n\n  /**\n   * Container position will be changes automatically based on this strategy if container can't fit view port.\n   * Set this property to any falsy value if you want to disable automatically adjustment.\n   * Available values: clockwise, counterclockwise.\n   * */\n  @Input('nbContextMenuAdjustment')\n  adjustment: NbAdjustment = NbAdjustment.CLOCKWISE;\n\n  /**\n   * Set NbMenu tag, which helps identify menu when working with NbMenuService.\n   * */\n  @Input('nbContextMenuTag')\n  tag: string;\n\n  /**\n   * Basic menu items, will be passed to the internal NbMenuComponent.\n   * */\n  @Input('nbContextMenu')\n  set items(items: NbMenuItem[]) {\n    this.validateItems(items);\n    this._items = items;\n  };\n\n  /**\n   * Describes when the container will be shown.\n   * Available options: `click`, `hover`, `hint`, `focus` and `noop`\n   * */\n  @Input('nbContextMenuTrigger')\n  trigger: NbTrigger = NbTrigger.CLICK;\n\n  protected ref: NbOverlayRef;\n  protected container: ComponentRef<any>;\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n  protected alive: boolean = true;\n  private _items: NbMenuItem[] = [];\n\n  private dynamicOverlay: NbDynamicOverlay;\n\n  constructor(private hostRef: ElementRef,\n              private menuService: NbMenuService,\n              private dynamicOverlayHandler: NbDynamicOverlayHandler) {\n  }\n\n  ngOnInit() {\n    this.dynamicOverlayHandler\n      .host(this.hostRef)\n      .componentType(NbContextMenuComponent);\n  }\n\n  ngOnChanges() {\n    this.rebuild();\n  }\n\n  ngAfterViewInit() {\n    this.dynamicOverlay = this.configureDynamicOverlay()\n      .build();\n    this.subscribeOnItemClick();\n  }\n\n  rebuild() {\n    this.dynamicOverlay = this.configureDynamicOverlay()\n      .rebuild();\n  }\n\n  show() {\n    this.dynamicOverlay.show();\n  }\n\n  hide() {\n    this.dynamicOverlay.hide();\n  }\n\n  toggle() {\n    this.dynamicOverlay.toggle();\n  }\n\n  ngOnDestroy() {\n    this.dynamicOverlayHandler.destroy();\n  }\n\n  protected configureDynamicOverlay() {\n    return this.dynamicOverlayHandler\n      .position(this.position)\n      .trigger(this.trigger)\n      .adjustment(this.adjustment)\n      .context({\n        position: this.position,\n        items: this._items,\n        tag: this.tag,\n      });\n  }\n\n  /*\n   * NbMenuComponent will crash if don't pass menu items to it.\n   * So, we just validating them and throw custom obvious error.\n   * */\n  private validateItems(items: NbMenuItem[]) {\n    if (!items || !items.length) {\n      throw Error(`List of menu items expected, but given: ${items}`)\n    }\n  }\n\n  private subscribeOnItemClick() {\n    this.menuService.onItemClick()\n      .pipe(\n        takeWhile(() => this.alive),\n        filter(({ tag }) => tag === this.tag),\n      )\n      .subscribe(() => this.hide());\n  }\n}\n"]}