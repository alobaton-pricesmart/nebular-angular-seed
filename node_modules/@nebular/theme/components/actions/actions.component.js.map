{"version":3,"file":"actions.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/actions/actions.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, HostBinding, Input } from '@angular/core';\n\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Action item, display a link with an icon, or any other content provided instead.\n */\n@Component({\n  selector: 'nb-action',\n  template: `\n    <ng-container *ngIf=\"icon; else projectedContent\">\n      <a class=\"icon-container\"\n         [routerLink]=\"link\"\n         [title]=\"title\"\n         *ngIf=\"link\">\n        <i class=\"control-icon {{ icon }}\"></i>\n      </a>\n      <a class=\"icon-container\"\n         [href]=\"href\"\n         [title]=\"title\"\n         *ngIf=\"href && !link\">\n        <i class=\"control-icon {{ icon }}\"></i>\n      </a>\n      <a class=\"icon-container\"\n         href=\"#\"\n         [title]=\"title\"\n         *ngIf=\"!href && !link\"\n         (click)=\"$event.preventDefault()\">\n        <i class=\"control-icon {{ icon }}\"></i>\n      </a>\n    </ng-container>\n\n    <ng-template #projectedContent>\n      <ng-content></ng-content>\n    </ng-template>\n\n    <nb-badge *ngIf=\"badgeText\"\n              [text]=\"badgeText\"\n              [status]=\"badgeStatus\"\n              [position]=\"badgePosition\">\n    </nb-badge>\n  `,\n})\nexport class NbActionComponent {\n  @HostBinding('class.disabled') disabledValue: boolean = false;\n\n  /**\n   * Router link to use\n   * @type string\n   */\n  @Input() link: string;\n\n  /**\n   * Regular HREF link\n   * @type: string\n   */\n  @Input() href: string;\n\n  /**\n   * Optional title for mouseover\n   * @type string\n   */\n  @Input() title: string = '';\n\n  /**\n   * Icon class to display\n   * @type string\n   */\n  @Input() icon: string;\n\n  /**\n   * Disables the item (changes item opacity and mouse cursor)\n   * @type boolean\n   */\n  @Input()\n  set disabled(val: boolean) {\n    this.disabledValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   */\n  @Input() badgeStatus: string;\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: string;\n}\n\n/**\n * Shows a horizontal list of actions, available in multiple sizes.\n * Aligns items vertically.\n *\n * @stacked-example(Showcase, action/action-showcase.component)\n *\n * Basic actions setup:\n * ```html\n * <nb-actions size=\"small\">\n *   <nb-action icon=\"nb-search\"></nb-action>\n *   <nb-action icon=\"nb-power-circled\"></nb-action>\n *   <nb-action icon=\"nb-person\"></nb-action>\n * </nb-actions>\n * ```\n * ### Installation\n *\n * Import `NbActionsModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbActionsModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Multiple sizes example:\n * @stacked-example(Multiple Sizes, action/action-sizes.component)\n *\n * It is also possible to specify a `badge` value:\n *\n * @stacked-example(Action Badge, action/action-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, action/action-width.component)\n *\n * @styles\n *\n * actions-font-size:\n * actions-font-family:\n * actions-line-height:\n * actions-fg:\n * actions-bg:\n * actions-separator:\n * actions-padding:\n * actions-size-small:\n * actions-size-medium:\n * actions-size-large:\n */\n@Component({\n  selector: 'nb-actions',\n  styleUrls: ['./actions.component.css'],\n  template: `\n    <ng-content select=\"nb-action\"></ng-content>\n  `,\n})\nexport class NbActionsComponent {\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n\n  private sizeValue: string;\n\n  @HostBinding('class.inverse') inverseValue: boolean;\n\n  @HostBinding('class.small')\n  get small() {\n    return this.sizeValue === NbActionsComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.medium')\n  get medium() {\n    return this.sizeValue === NbActionsComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.large')\n  get large() {\n    return this.sizeValue === NbActionsComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.full-width')\n  fullWidthValue: boolean = false;\n\n  /**\n   * Size of the component, small|medium|large\n   * @type string\n   */\n  @Input()\n  set size(val: string) {\n    this.sizeValue = val;\n  }\n\n  /**\n   * Makes colors inverse based on current theme\n   * @type boolean\n   */\n  @Input()\n  set inverse(val: boolean) {\n    this.inverseValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Component will fill full width of the container\n   * @type boolean\n   */\n  @Input()\n  set fullWidth(val: boolean) {\n    this.fullWidthValue = convertToBoolProperty(val);\n  }\n}\n"]}