{"version":3,"file":"toast.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/toastr/toast.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\nimport { NbToast, NbToastStatus } from './model';\n\n\n/**\n * The `NbToastComponent` is responsible for rendering each toast with appropriate styles.\n *\n * @styles\n *\n * toastr-bg\n * toastr-padding\n * toastr-fg\n * toastr-border\n * toastr-border-radius\n * toastr-border-color\n * */\n/**\n * TODO\n * Remove svg icons, include them in font.\n * */\n@Component({\n  selector: 'nb-toast',\n  styleUrls: ['./toast.component.css'],\n  templateUrl: './toast.component.html',\n})\nexport class NbToastComponent {\n  @Input()\n  toast: NbToast;\n\n  @Output() destroy: EventEmitter<void> = new EventEmitter();\n\n  @HostBinding('class.success')\n  get success(): boolean {\n    return this.toast.config.status === NbToastStatus.SUCCESS;\n  }\n\n  @HostBinding('class.info')\n  get info(): boolean {\n    return this.toast.config.status === NbToastStatus.INFO;\n  }\n\n  @HostBinding('class.warning')\n  get warning(): boolean {\n    return this.toast.config.status === NbToastStatus.WARNING;\n  }\n\n  @HostBinding('class.primary')\n  get primary(): boolean {\n    return this.toast.config.status === NbToastStatus.PRIMARY;\n  }\n\n  @HostBinding('class.danger')\n  get danger(): boolean {\n    return this.toast.config.status === NbToastStatus.DANGER;\n  }\n\n  @HostBinding('class.default')\n  get default(): boolean {\n    return this.toast.config.status === NbToastStatus.DEFAULT;\n  }\n\n  @HostBinding('class.destroy-by-click')\n  get destroyByClick(): boolean {\n    return this.toast.config.destroyByClick;\n  }\n\n  @HostBinding('class.has-icon')\n  get hasIcon(): boolean {\n    return this.toast.config.hasIcon && this.toast.config.status !== NbToastStatus.DEFAULT;\n  }\n\n  @HostBinding('class.custom-icon')\n  get customIcon(): boolean {\n    return !!this.icon;\n  }\n\n  get icon(): string {\n    return this.toast.config.icon;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.destroy.emit();\n  }\n}\n"]}