{"version":3,"file":"select.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/select/select.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { take, takeWhile } from 'rxjs/operators';\nimport { merge, Observable, Subject } from 'rxjs';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPortalDirective,\n  NbPosition,\n  NbPositionBuilderService,\n  NbScrollStrategy,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilderService,\n} from '../cdk';\nimport { NbOptionComponent } from './option.component';\nimport { NbButtonComponent } from '../button/button.component';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { convertToBoolProperty } from '../helpers';\n\n\n@Component({\n  selector: 'nb-select-label',\n  template: '<ng-content></ng-content>',\n})\nexport class NbSelectLabelComponent {\n}\n\n/**\n * The `NbSelectComponent` provides a capability to select one of the passed items.\n *\n * @stacked-example(Showcase, select/select-showcase.component)\n *\n * ### Installation\n *\n * Import `NbSelectModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbSelectModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to use it as the multi-select control you have to mark it as `multiple`.\n * In this case, `nb-select` will work only with arrays - accept arrays and propagate arrays.\n *\n * @stacked-example(Multiple, select/select-multiple.component)\n *\n * Items without values will clean selection.\n *\n * @stacked-example(Clean selection, select/select-clean.component)\n *\n * Select may be bounded using `selected` input:\n *\n * ```html\n * <nb-select [(selected)]=\"selected\"></nb-selected>\n * ```\n *\n * Or you can bind control with form controls or ngModel:\n *\n * @stacked-example(Select form binding, select/select-form.component)\n *\n * Options in the select may be grouped using `nb-option-group` component.\n *\n * @stacked-example(Grouping, select/select-groups.component)\n *\n * Select may have a placeholder that will be shown when nothing selected:\n *\n * @stacked-example(Placeholder, select/select-placeholder.component)\n *\n * You can disable select, options and whole groups.\n *\n * @stacked-example(Disabled select, select/select-disabled.component)\n *\n * Also, the custom label may be provided in select.\n * This custom label will be used for instead placeholder when something selected.\n *\n * @stacked-example(Custom label, select/select-label.component)\n *\n * Default `nb-select` size is `medium` and status color is `primary`.\n * Select is available in multiple colors using `status` property:\n *\n * @stacked-example(Select statuses, select/select-status.component)\n *\n * There are four select sizes:\n *\n * @stacked-example(Select sizes, select/select-sizes.component)\n *\n * And two additional style types - `outline`:\n *\n * @stacked-example(Outline select, select/select-outline.component)\n *\n * and `hero`:\n *\n * @stacked-example(Select colors, select/select-hero.component)\n *\n * Select is available in different shapes, that could be combined with the other properties:\n *\n * @stacked-example(Select shapes, select/select-shapes.component)\n *\n *\n * @styles\n *\n * select-border-width:\n * select-max-height:\n * select-bg:\n * select-checkbox-color:\n * select-checkmark-color:\n * select-option-disabled-bg:\n * select-option-disabled-opacity:\n * select-option-padding:\n * */\n@Component({\n  selector: 'nb-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbSelectComponent),\n      multi: true,\n    },\n  ],\n})\nexport class NbSelectComponent<T> implements OnInit, AfterViewInit, AfterContentInit, OnDestroy, ControlValueAccessor {\n  /**\n   * Select size, available sizes:\n   * `xxsmall`, `xsmall`, `small`, `medium`, `large`\n   */\n  @Input() size: string;\n\n  /**\n   * Select status (adds specific styles):\n   * `primary`, `info`, `success`, `warning`, `danger`\n   */\n  @Input() status: string = 'primary';\n\n  /**\n   * Select shapes: `rectangle`, `round`, `semi-round`\n   */\n  @Input() shape: string;\n\n  /**\n   * Adds `hero` styles\n   */\n  @Input() hero: boolean;\n\n  /**\n   * Disables the select\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If set element will fill its container\n   */\n  @Input() fullWidth: boolean;\n\n  /**\n   * Adds `outline` styles\n   */\n  @Input() outline: boolean;\n\n  /**\n   * Renders select placeholder if nothing selected.\n   * */\n  @Input() placeholder: string = '';\n\n  /**\n   * Will be emitted when selected value changes.\n   * */\n  @Output() selectedChange: EventEmitter<T | T[]> = new EventEmitter();\n\n  /**\n   * Accepts selected item or array of selected items.\n   * */\n  @Input('selected')\n  set setSelected(value: T | T[]) {\n    this.writeValue(value);\n  }\n\n  /**\n   * Gives capability just write `multiple` over the element.\n   * */\n  @Input('multiple')\n  set setMultiple(multiple: boolean) {\n    this.multiple = convertToBoolProperty(multiple);\n  }\n\n  /**\n   * List of `NbOptionComponent`'s components passed as content.\n   * TODO maybe it would be better provide wrapper\n   * */\n  @ContentChildren(NbOptionComponent, { descendants: true }) options: QueryList<NbOptionComponent<T>>;\n\n  /**\n   * Custom select label, will be rendered instead of default enumeration with coma.\n   * */\n  @ContentChild(NbSelectLabelComponent) customLabel;\n\n  /**\n   * NbCard with options content.\n   * */\n  @ViewChild(NbPortalDirective) portal: NbPortalDirective;\n\n  @ViewChild(NbButtonComponent, { read: ElementRef }) button: ElementRef<HTMLButtonElement>;\n\n  multiple: boolean = false;\n\n  /**\n   * List of selected options.\n   * */\n  selectionModel: NbOptionComponent<T>[] = [];\n\n  positionStrategy: NbAdjustableConnectedPositionStrategy;\n\n  /**\n   * Current overlay position because of we have to toggle overlayPosition\n   * in [ngClass] direction and this directive can use only string.\n   */\n  overlayPosition: NbPosition = '' as NbPosition;\n\n  /**\n   * Stream of events that will fire when one of the options fire selectionChange event.\n   * */\n  protected selectionChange$: Subject<NbOptionComponent<T>> = new Subject();\n  readonly selectionChange: Observable<NbOptionComponent<T>> = this.selectionChange$.asObservable();\n\n  protected ref: NbOverlayRef;\n\n  protected triggerStrategy: NbTriggerStrategy;\n\n  protected alive: boolean = true;\n\n  /**\n   * If a user assigns value before content nb-options's rendered the value will be putted in this variable.\n   * And then applied after content rendered.\n   * Only the last value will be applied.\n   * */\n  protected queue: T | T[];\n\n  /**\n   * Function passed through control value accessor to propagate changes.\n   * */\n  protected onChange: Function = () => {};\n  protected onTouched: Function = () => {};\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              protected overlay: NbOverlayService,\n              protected hostRef: ElementRef<HTMLElement>,\n              protected positionBuilder: NbPositionBuilderService,\n              protected triggerStrategyBuilder: NbTriggerStrategyBuilderService,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  /**\n   * Determines is select opened.\n   * */\n  get isOpened(): boolean {\n    return this.ref && this.ref.hasAttached();\n  }\n\n  /**\n   * Determines is select hidden.\n   * */\n  get isHidden(): boolean {\n    return !this.isOpened;\n  }\n\n  /**\n   * Returns width of the select button.\n   * */\n  get hostWidth(): number {\n    return this.hostRef.nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Content rendered in the label.\n   * */\n  get selectionView() {\n    if (this.selectionModel.length > 1) {\n      return this.selectionModel.map((option: NbOptionComponent<T>) => option.content).join(', ');\n    }\n\n    return this.selectionModel[0].content;\n  }\n\n  ngOnInit() {\n    this.createOverlay();\n  }\n\n  ngAfterViewInit() {\n    this.triggerStrategy = this.createTriggerStrategy();\n\n    this.subscribeOnTriggers();\n    this.subscribeOnPositionChange();\n    this.subscribeOnSelectionChange();\n  }\n\n  ngAfterContentInit() {\n    if (this.queue) {\n      this.writeValue(this.queue);\n      this.cd.detectChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n\n    this.ref.dispose();\n  }\n\n  show() {\n    if (this.isHidden) {\n      this.ref.attach(this.portal);\n      this.cd.markForCheck();\n    }\n  }\n\n  hide() {\n    if (this.isOpened) {\n      this.ref.detach();\n      this.cd.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.cd.detectChanges();\n  }\n\n  writeValue(value: T | T[]): void {\n    if (!value) {\n      return;\n    }\n\n    if (this.options) {\n      this.setSelection(value);\n    } else {\n      this.queue = value;\n    }\n  }\n\n  /**\n   * Selects option or clear all selected options if value is null.\n   * */\n  protected handleSelect(option: NbOptionComponent<T>) {\n    if (option.value) {\n      this.selectOption(option);\n    } else {\n      this.reset();\n    }\n\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Deselect all selected options.\n   * */\n  protected reset() {\n    this.selectionModel.forEach((option: NbOptionComponent<T>) => option.deselect());\n    this.selectionModel = [];\n    this.hide();\n    this.button.nativeElement.focus();\n    this.emitSelected(null);\n  }\n\n  /**\n   * Determines how to select option as multiple or single.\n   * */\n  protected selectOption(option: NbOptionComponent<T>) {\n    if (this.multiple) {\n      this.handleMultipleSelect(option);\n    } else {\n      this.handleSingleSelect(option);\n    }\n  }\n\n  /**\n   * Select single option.\n   * */\n  protected handleSingleSelect(option: NbOptionComponent<T>) {\n    const selected = this.selectionModel.pop();\n\n    if (selected && selected !== option) {\n      selected.deselect();\n    }\n\n    this.selectionModel = [option];\n    option.select();\n    this.hide();\n    this.button.nativeElement.focus();\n\n    this.emitSelected(option.value);\n  }\n\n  /**\n   * Select for multiple options.\n   * */\n  protected handleMultipleSelect(option: NbOptionComponent<T>) {\n    if (option.selected) {\n      this.selectionModel = this.selectionModel.filter(s => s.value !== option.value);\n      option.deselect();\n    } else {\n      this.selectionModel.push(option);\n      option.select();\n    }\n\n    this.emitSelected(this.selectionModel.map((opt: NbOptionComponent<T>) => opt.value));\n  }\n\n  protected createOverlay() {\n    const scrollStrategy = this.createScrollStrategy();\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({ positionStrategy: this.positionStrategy, scrollStrategy });\n  }\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(NbPosition.BOTTOM)\n      .offset(0)\n      .adjustment(NbAdjustment.VERTICAL);\n  }\n\n  protected createScrollStrategy(): NbScrollStrategy {\n    return this.overlay.scrollStrategies.block();\n  }\n\n  protected createTriggerStrategy(): NbTriggerStrategy {\n    return this.triggerStrategyBuilder\n      .trigger(NbTrigger.CLICK)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.getContainer())\n      .build();\n  }\n\n  protected subscribeOnTriggers() {\n    this.triggerStrategy.show$\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => this.show());\n\n    this.triggerStrategy.hide$\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(($event: Event) => {\n        this.hide();\n        if (!this.isClickedWithinComponent($event)) {\n          this.onTouched();\n        }\n      });\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => this.overlayPosition = position);\n\n    this.positionStrategy.positionChange\n      .pipe(take(1))\n      .subscribe(() => this.cd.detectChanges());\n  }\n\n  protected subscribeOnSelectionChange() {\n    this.subscribeOnOptionsSelectionChange();\n    /**\n     * If the user changes provided options list in the runtime we have to handle this\n     * and resubscribe on options selection changes event.\n     * Otherwise, the user will not be able to select new options.\n     * */\n    this.options.changes\n      .subscribe(() => this.subscribeOnOptionsSelectionChange());\n\n    this.selectionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((option: NbOptionComponent<T>) => this.handleSelect(option));\n  }\n\n  protected getContainer() {\n    return this.ref && this.ref.hasAttached() && <ComponentRef<any>> {\n      location: {\n        nativeElement: this.ref.overlayElement,\n      },\n    };\n  }\n\n  /**\n   * Propagate selected value.\n   * */\n  protected emitSelected(selected: T | T[]) {\n    this.onChange(selected);\n    this.selectedChange.emit(selected);\n  }\n\n  /**\n   * Set selected value in model.\n   * */\n  protected setSelection(value: T | T[]) {\n    const isArray: boolean = Array.isArray(value);\n\n    if (this.multiple && !isArray) {\n      throw new Error('Can\\'t assign single value if select is marked as multiple');\n    }\n\n    if (!this.multiple && isArray) {\n      throw new Error('Can\\'t assign array if select is not marked as multiple');\n    }\n\n    this.cleanSelection();\n\n    if (isArray) {\n      (<T[]> value).forEach((option: T) => this.selectValue(option));\n    } else {\n      this.selectValue(<T> value);\n    }\n\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  protected cleanSelection() {\n    this.selectionModel.forEach((option: NbOptionComponent<T>) => option.deselect());\n    this.selectionModel = [];\n  }\n\n  /**\n   * Selects value.\n   * */\n  protected selectValue(value: T) {\n    const corresponding = this.options.find((option: NbOptionComponent<T>) => option.value === value);\n\n    if (corresponding) {\n      corresponding.select();\n      this.selectionModel.push(corresponding);\n    }\n  }\n\n  /**\n   * Sets touched if focus moved outside of button and overlay,\n   * ignoring the case when focus moved to options overlay.\n   */\n  trySetTouched() {\n    if (this.isHidden) {\n      this.onTouched();\n    }\n  }\n\n  protected isClickedWithinComponent($event: Event) {\n    return this.hostRef.nativeElement === $event.target || this.hostRef.nativeElement.contains($event.target as Node);\n  }\n\n  protected subscribeOnOptionsSelectionChange() {\n    merge(...this.options.map(it => it.selectionChange))\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((change: NbOptionComponent<T>) => this.selectionChange$.next(change));\n  }\n}\n"]}