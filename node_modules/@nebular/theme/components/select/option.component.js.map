{"version":3,"file":"option.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/select/option.component.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\nimport { NbSelectComponent } from './select.component';\n\n\n@Component({\n  selector: 'nb-option',\n  styleUrls: ['./option.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <nb-checkbox *ngIf=\"withCheckbox\" [(ngModel)]=\"selected\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </nb-checkbox>\n\n    <ng-container *ngIf=\"!withCheckbox\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ng-container>\n\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class NbOptionComponent<T> implements OnDestroy {\n  /**\n   * Option value that will be fired on selection.\n   * */\n  @Input() value: T;\n\n  @Input('disabled')\n  set setDisabled(disabled: boolean) {\n    this.disabled = convertToBoolProperty(disabled);\n  }\n\n  /**\n   * Fires value on click.\n   * */\n  @Output() selectionChange: EventEmitter<NbOptionComponent<T>> = new EventEmitter();\n\n  selected: boolean = false;\n  disabled: boolean = false;\n  private alive: boolean = true;\n\n  constructor(@Inject(forwardRef(() => NbSelectComponent)) protected parent,\n              protected elementRef: ElementRef,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  /**\n   * Determines should we render checkbox.\n   * */\n  get withCheckbox(): boolean {\n    return this.multiple && !!this.value;\n  }\n\n  get content() {\n    return this.elementRef.nativeElement.textContent;\n  }\n\n  get multiple() {\n    return this.parent.multiple;\n  }\n\n  @HostBinding('class.selected')\n  get selectedClass(): boolean {\n    return this.selected;\n  }\n\n  @HostBinding('class.disabled')\n  get disabledClass(): boolean {\n    return this.disabled;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.selectionChange.emit(this);\n  }\n\n  select() {\n    this.selected = true;\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n\n  deselect() {\n    /**\n     * In case of changing options in runtime the reference to the selected option will be kept in select component.\n     * This may lead to exceptions with detecting changes in destroyed component.\n     * */\n    if (!this.alive) {\n      return;\n    }\n\n    this.selected = false;\n    this.cd.markForCheck();\n    this.cd.detectChanges();\n  }\n}\n\n"]}