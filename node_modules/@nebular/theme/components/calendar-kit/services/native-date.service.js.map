{"version":3,"file":"native-date.service.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/calendar-kit/services/native-date.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport {\n  DatePipe,\n  FormStyle,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\n\nimport { NbDateService } from './date.service';\n\n\n/**\n * The `NbNativeDateService` is basic implementation of `NbDateService` using\n * native js date objects and angular localization services.\n * */\n@Injectable()\nexport class NbNativeDateService extends NbDateService<Date> {\n  protected datePipe: DatePipe;\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n    this.setLocale(locale);\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n    this.datePipe = new DatePipe(locale);\n  }\n\n  isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  getFirstDayOfWeek(): number {\n    return getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  getMonthName(date: Date, style: TranslationWidth = TranslationWidth.Abbreviated): string {\n    const index: number = date.getMonth();\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.Abbreviated): string {\n    return getLocaleMonthNames(this.locale, FormStyle.Format, style)[index];\n  }\n\n  getDayOfWeekNames(): string[] {\n    return getLocaleDayNames(this.locale, FormStyle.Format, TranslationWidth.Short);\n  }\n\n  format(date: Date, format: string): string {\n    return this.datePipe.transform(date, format);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  addMonth(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + num, date.getDate());\n  }\n\n  addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n    return result;\n  }\n\n  getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) &&\n      date1.getDate() === date2.getDate();\n  }\n\n  isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) &&\n      date1.getMonth() === date2.getMonth();\n  }\n\n  isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  getId(): string {\n    return 'native';\n  }\n}\n"]}