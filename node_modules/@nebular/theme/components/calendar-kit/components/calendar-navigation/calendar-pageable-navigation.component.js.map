{"version":3,"file":"calendar-pageable-navigation.component.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/calendar-kit/components/calendar-navigation/calendar-pageable-navigation.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvE,OAAO,EAAE,wBAAwB,EAAE,MAAM,wCAAwC,CAAC;AAYlF;IAME,+CAAoB,gBAA0C;QAA1C,qBAAgB,GAAhB,gBAAgB,CAA0B;QAJpD,eAAU,GAAG,IAAI,YAAY,EAAQ,CAAC;QACtC,SAAI,GAAG,IAAI,YAAY,EAAQ,CAAC;QAChC,SAAI,GAAG,IAAI,YAAY,EAAQ,CAAC;IAG1C,CAAC;IAED,sBAAI,wDAAK;aAAT;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;;;OAAA;IAED,sBAAI,wDAAK;aAAT;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;;;OAAA;IAdQ;QAAR,KAAK,EAAE;;uEAAS;IACP;QAAT,MAAM,EAAE;;6EAAuC;IACtC;QAAT,MAAM,EAAE;;uEAAiC;IAChC;QAAT,MAAM,EAAE;;uEAAiC;IAJ/B,qCAAqC;QATjD,SAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,SAAS,EAAE,CAAC,8CAA8C,CAAC;YAC3D,QAAQ,EAAE,4TAIT;SACF,CAAC;yCAOsC,wBAAwB;OANnD,qCAAqC,CAgBjD;IAAD,4CAAC;CAAA,AAhBD,IAgBC;SAhBY,qCAAqC","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { NbLayoutDirectionService } from '../../../../services/direction.service';\n\n\n@Component({\n  selector: 'nb-calendar-pageable-navigation',\n  styleUrls: ['./calendar-pageable-navigation.component.css'],\n  template: `\n    <i [ngClass]=\"{'nb-arrow-left': isLtr, 'nb-arrow-right': isRtl }\" (click)=\"prev.emit()\"></i>\n    <nb-calendar-navigation [date]=\"date\" (changeMode)=\"changeMode.emit()\"></nb-calendar-navigation>\n    <i [ngClass]=\"{'nb-arrow-right': isLtr, 'nb-arrow-left': isRtl }\" (click)=\"next.emit()\"></i>\n  `,\n})\nexport class NbCalendarPageableNavigationComponent<D> {\n  @Input() date: D;\n  @Output() changeMode = new EventEmitter<void>();\n  @Output() next = new EventEmitter<void>();\n  @Output() prev = new EventEmitter<void>();\n\n  constructor(private directionService: NbLayoutDirectionService) {\n  }\n\n  get isRtl(): boolean {\n    return this.directionService.isRtl();\n  }\n\n  get isLtr(): boolean {\n    return this.directionService.isLtr();\n  }\n}\n"]}