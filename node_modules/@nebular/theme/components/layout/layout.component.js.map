{"version":3,"file":"layout.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/layout/layout.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit, Component, ElementRef, HostBinding, HostListener, Input, OnDestroy,\n  Renderer2, ViewChild, ViewContainerRef, Inject, PLATFORM_ID, forwardRef,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, takeWhile } from 'rxjs/operators';\n\nimport { convertToBoolProperty } from '../helpers';\nimport { NbThemeService } from '../../services/theme.service';\nimport { NbSpinnerService } from '../../services/spinner.service';\nimport { NbLayoutDirectionService } from '../../services/direction.service';\nimport { NbRestoreScrollTopHelper } from './restore-scroll-top.service';\nimport { NbScrollPosition, NbLayoutScrollService } from '../../services/scroll.service';\nimport { NbLayoutDimensions, NbLayoutRulerService } from '../../services/ruler.service';\nimport { NB_WINDOW, NB_DOCUMENT } from '../../theme.options';\nimport { NbOverlayContainerAdapter } from '../cdk/adapter/overlay-container-adapter';\n\n/**\n * A container component which determines a content position inside of the layout.\n * The layout could contain unlimited columns (not including the sidebars).\n *\n * By default the columns are ordered from the left to the right,\n * but it's also possible to overwrite this behavior by setting a `left` attribute to the column,\n * moving it to the very first position:\n *\n * @stacked-example(Column Left, layout/layout-column-left.component)\n */\n@Component({\n  selector: 'nb-layout-column',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class NbLayoutColumnComponent {\n\n  @HostBinding('class.left') leftValue: boolean;\n  @HostBinding('class.start') startValue: boolean;\n\n  /**\n   * Move the column to the very left position in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set left(val: boolean) {\n    this.leftValue = convertToBoolProperty(val);\n    this.startValue = false;\n  }\n\n  /**\n   * Make columnt first in the layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set start(val: boolean) {\n    this.startValue = convertToBoolProperty(val);\n    this.leftValue = false;\n  }\n}\n\n/**\n * Page header component.\n * Located on top of the page above the layout columns and sidebars.\n * Could be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\n * sticky to the top of the nb-layout (to of the page). Here's an example:\n *\n * @stacked-example(Fixed Header, layout/layout-fixed-header.component)\n *\n * In a pair with sidebar it is possible to setup a configuration when header is placed on a side of the sidebar\n * and not on top of it. To achieve this simply put a `subheader` property to the header like this:\n * ```html\n * <nb-layout-header subheader></nb-layout-header>\n * ```\n * @stacked-example(Subheader, layout/layout-sidebar-subheader.component)\n * Note that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n *\n * Same way you can put both `fixed` and `clipped` headers adding creating a sub-header for your app:\n *\n * @stacked-example(Subheader, layout/layout-subheader.component)\n *\n * @styles\n *\n * header-font-family\n * header-line-height\n * header-fg\n * header-bg\n * header-height\n * header-padding\n * header-shadow\n */\n@Component({\n  selector: 'nb-layout-header',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutHeaderComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n  @HostBinding('class.subheader') subheaderValue: boolean;\n\n  // tslint:disable-next-line\n  constructor(@Inject(forwardRef(() => NbLayoutComponent)) private layout: NbLayoutComponent) {\n  }\n\n  /**\n   * Makes the header sticky to the top of the nb-layout.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Places header on a side of the sidebar, and not above.\n   * Disables fixed mode for this header and remove a shadow from the sidebar.\n   * @param {boolean} val\n   */\n  @Input()\n  set subheader(val: boolean) {\n    this.subheaderValue = convertToBoolProperty(val);\n    this.fixedValue = false;\n    this.layout.withSubheader = this.subheaderValue;\n  }\n}\n\n/**\n * Page footer.\n * Located under the nb-layout content (specifically, under the columns).\n * Could be made `fixed`, becoming sticky to the bottom of the view port (window).\n *\n * @styles\n *\n * footer-height\n * footer-padding\n * footer-fg\n * footer-bg\n * footer-separator\n * footer-shadow\n */\n@Component({\n  selector: 'nb-layout-footer',\n  template: `\n    <nav [class.fixed]=\"fixedValue\">\n      <ng-content></ng-content>\n    </nav>\n  `,\n})\nexport class NbLayoutFooterComponent {\n\n  @HostBinding('class.fixed') fixedValue: boolean;\n\n  /**\n   * Makes the footer sticky to the bottom of the window.\n   * @param {boolean} val\n   */\n  @Input()\n  set fixed(val: boolean) {\n    this.fixedValue = convertToBoolProperty(val);\n  }\n\n}\n\n/**\n * Layout container component.\n * When using with Nebular Theme System it is required that all child components should be placed inside.\n *\n * Basic example of two column layout with header:\n *\n * @stacked-example(Showcase, layout/layout-showcase.component)\n *\n * Can contain the following components inside:\n *\n * ```html\n * <nb-layout>\n *  <nb-layout-header></nb-layout-header>\n *  <nb-layout-footer></nb-layout-footer>\n *  <nb-layout-column></nb-layout-column>\n *  <nb-sidebar></nb-sidebar>\n * </nb-layout>\n * ```\n * ### Installation\n *\n * Import `NbLayoutModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbLayoutModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbLayoutModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbLayoutModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n * By default the layout fills up the whole view-port.\n * The window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\n * won't mess with the fixed nb-header.\n *\n * The child components are projected into a flexible layout structure allowing to adjust the layout behavior\n * based on the settings provided.\n *\n * The layout content (columns) becomes centered when the window width is more than\n * the value specified in the theme variable `layout-content-width`.\n *\n * The layout also contains the area on the very top (the first child of the nb-layout), which could be used\n * to dynamically append some components like modals or spinners/loaders\n * so that they are located on top of the elements hierarchy.\n * More details are under the `ThemeService` section.\n *\n * The layout component is also responsible for changing application themes.\n * It listens to the `themeChange` event and change a theme CSS class appended to body.\n * Based on the class appended, specific CSS-theme is applied to the application.\n * More details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n *\n * A simple layout with footer:\n *\n * @stacked-example(Layout With Footer, layout/layout-w-footer.component)\n *\n * It is possible to ask the layout to center the columns (notice: we added a `center` attribute\n * to the layout:\n *\n * ```html\n * <nb-layout center>\n *   <nb-layout-header>Awesome Company</nb-layout-header>\n *\n *   <nb-layout-column>\n *     Hello World!\n *   </nb-layout-column>\n *\n *   <nb-layout-footer>Contact us</nb-layout-footer>\n * </nb-layout>\n * ```\n *\n * @styles\n *\n * layout-font-family\n * layout-font-size\n * layout-line-height\n * layout-fg\n * layout-bg\n * layout-min-height\n * layout-content-width\n * layout-window-mode-min-width\n * layout-window-mode-max-width: window mode only, after this value layout turns into a floating window\n * layout-window-mode-bg: window mode only, background\n * layout-window-mode-padding-top: window mode only, max padding from top\n * layout-window-shadow: window mode shadow\n * layout-padding\n * layout-medium-padding\n * layout-small-padding\n */\n@Component({\n  selector: 'nb-layout',\n  styleUrls: ['./layout.component.css'],\n  template: `\n    <div class=\"scrollable-container\" #scrollableContainer (scroll)=\"onScroll($event)\">\n      <div class=\"layout\">\n        <ng-content select=\"nb-layout-header:not([subheader])\"></ng-content>\n        <div class=\"layout-container\">\n          <ng-content select=\"nb-sidebar\"></ng-content>\n          <div class=\"content\" [class.center]=\"centerValue\">\n            <ng-content select=\"nb-layout-header[subheader]\"></ng-content>\n            <div class=\"columns\">\n              <ng-content select=\"nb-layout-column\"></ng-content>\n            </div>\n            <ng-content select=\"nb-layout-footer\"></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NbLayoutComponent implements AfterViewInit, OnDestroy {\n\n  centerValue: boolean = false;\n  restoreScrollTopValue: boolean = true;\n\n  @HostBinding('class.window-mode') windowModeValue: boolean = false;\n  @HostBinding('class.with-scroll') withScrollValue: boolean = false;\n  @HostBinding('class.with-subheader') withSubheader: boolean = false;\n  @HostBinding('class.overlay-scroll-block') overlayScrollBlock: boolean = false;\n\n  /**\n   * Defines whether the layout columns will be centered after some width\n   * @param {boolean} val\n   */\n  @Input()\n  set center(val: boolean) {\n    this.centerValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\n   * becomes centered by width with a margin from the top of the screen, like a floating window.\n   * Automatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\n   * window. (TODO: check this)\n   * @param {boolean} val\n   */\n  @Input()\n  set windowMode(val: boolean) {\n    this.windowModeValue = convertToBoolProperty(val);\n    this.withScroll = this.windowModeValue;\n  }\n\n  /**\n   * Defines whether to move the scrollbars to layout or leave it at the body level.\n   * Automatically set to true when `windowMode` is enabled.\n   * @param {boolean} val\n   */\n  @Input()\n  set withScroll(val: boolean) {\n    this.withScrollValue = convertToBoolProperty(val);\n\n    // TODO: is this the best way of doing it? as we don't have access to body from theme styles\n    // TODO: add e2e test\n    const body = this.document.getElementsByTagName('body')[0];\n    if (this.withScrollValue) {\n      this.renderer.setStyle(body, 'overflow', 'hidden');\n    } else {\n      this.renderer.setStyle(body, 'overflow', 'initial');\n    }\n  }\n\n  /**\n   * Restores scroll to the top of the page after navigation\n   * @param {boolean} val\n   */\n  @Input()\n  set restoreScrollTop(val: boolean) {\n    this.restoreScrollTopValue = convertToBoolProperty(val);\n  }\n\n  @ViewChild('layoutTopDynamicArea', { read: ViewContainerRef }) veryTopRef: ViewContainerRef;\n  @ViewChild('scrollableContainer', { read: ElementRef }) scrollableContainerRef: ElementRef;\n\n  protected afterViewInit$ = new BehaviorSubject(null);\n\n  private alive: boolean = true;\n\n  constructor(\n    protected themeService: NbThemeService,\n    protected spinnerService: NbSpinnerService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n    @Inject(NB_WINDOW) protected window,\n    @Inject(NB_DOCUMENT) protected document,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected layoutDirectionService: NbLayoutDirectionService,\n    protected scrollService: NbLayoutScrollService,\n    protected rulerService: NbLayoutRulerService,\n    protected scrollTop: NbRestoreScrollTopHelper,\n    protected overlayContainer: NbOverlayContainerAdapter,\n  ) {\n    this.registerAsOverlayContainer();\n\n    this.themeService.onThemeChange()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((theme: any) => {\n        const body = this.document.getElementsByTagName('body')[0];\n        if (theme.previous) {\n          this.renderer.removeClass(body, `nb-theme-${theme.previous}`);\n        }\n        this.renderer.addClass(body, `nb-theme-${theme.name}`);\n      });\n\n    this.themeService.onAppendLayoutClass()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((className: string) => {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      });\n\n    this.themeService.onRemoveLayoutClass()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe((className: string) => {\n        this.renderer.removeClass(this.elementRef.nativeElement, className);\n      });\n\n    this.spinnerService.registerLoader(new Promise((resolve, reject) => {\n      this.afterViewInit$\n        .pipe(\n          takeWhile(() => this.alive),\n        )\n        .subscribe((_) => resolve());\n    }));\n    this.spinnerService.load();\n\n    this.rulerService.onGetDimensions()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe(({ listener }) => {\n        listener.next(this.getDimensions());\n        listener.complete();\n      });\n\n    this.scrollService.onGetPosition()\n      .pipe(\n        takeWhile(() => this.alive),\n      )\n      .subscribe(({ listener }) => {\n        listener.next(this.getScrollPosition());\n        listener.complete();\n      });\n\n    this.scrollTop\n      .shouldRestore()\n      .pipe(\n        filter(() => this.restoreScrollTopValue),\n        takeWhile(() => this.alive),\n      )\n      .subscribe(() => {\n        this.scroll(0, 0);\n      });\n\n    this.scrollService\n      .onScrollableChange()\n      .pipe(\n        filter(() => this.withScrollValue),\n      )\n      .subscribe((scrollable: boolean) => {\n        this.overlayScrollBlock = !scrollable;\n      });\n\n    if (isPlatformBrowser(this.platformId)) {\n      // trigger first time so that after the change we have the initial value\n      this.themeService.changeWindowWidth(this.window.innerWidth);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.layoutDirectionService.onDirectionChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(direction => this.document.dir = direction);\n\n    this.scrollService.onManualScroll()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(({ x, y }: NbScrollPosition) => this.scroll(x, y));\n\n    this.afterViewInit$.next(true);\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n    this.unregisterAsOverlayContainer();\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll($event) {\n    this.scrollService.fireScrollChange($event);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.themeService.changeWindowWidth(event.target.innerWidth);\n  }\n\n  /**\n   * Returns scroll and client height/width\n   *\n   * Depending on the current scroll mode (`withScroll=true`) returns sizes from the body element\n   * or from the `.scrollable-container`\n   * @returns {NbLayoutDimensions}\n   */\n  getDimensions(): NbLayoutDimensions {\n    let clientWidth, clientHeight, scrollWidth, scrollHeight = 0;\n    if (this.withScrollValue) {\n      const container = this.scrollableContainerRef.nativeElement;\n      clientWidth = container.clientWidth;\n      clientHeight = container.clientHeight;\n      scrollWidth = container.scrollWidth;\n      scrollHeight = container.scrollHeight;\n    } else {\n      const { documentElement, body } = this.document;\n      clientWidth = documentElement.clientWidth || body.clientWidth;\n      clientHeight = documentElement.clientHeight || body.clientHeight;\n      scrollWidth = documentElement.scrollWidth || body.scrollWidth;\n      scrollHeight = documentElement.scrollHeight || body.scrollHeight;\n    }\n\n    return {\n      clientWidth,\n      clientHeight,\n      scrollWidth,\n      scrollHeight,\n    };\n  }\n\n  /**\n   * Returns scroll position of current scroll container.\n   *\n   * If `withScroll` = true, returns scroll position of the `.scrollable-container` element,\n   * otherwise - of the scrollable element of the window (which may be different depending of a browser)\n   *\n   * @returns {NbScrollPosition}\n   */\n  getScrollPosition(): NbScrollPosition {\n    if (!isPlatformBrowser(this.platformId)) {\n      return { x: 0, y: 0 };\n    }\n\n    if (this.withScrollValue) {\n      const container = this.scrollableContainerRef.nativeElement;\n      return { x: container.scrollLeft, y: container.scrollTop };\n    }\n\n    const documentRect = this.document.documentElement.getBoundingClientRect();\n\n    const x = -documentRect.left || this.document.body.scrollLeft || this.window.scrollX ||\n      this.document.documentElement.scrollLeft || 0;\n\n    const y = -documentRect.top || this.document.body.scrollTop || this.window.scrollY ||\n      this.document.documentElement.scrollTop || 0;\n\n\n    return { x, y };\n  }\n\n  protected registerAsOverlayContainer() {\n    if (this.overlayContainer.setContainer) {\n      this.overlayContainer.setContainer(this.elementRef.nativeElement);\n    }\n  }\n\n  protected unregisterAsOverlayContainer() {\n    if (this.overlayContainer.clearContainer) {\n      this.overlayContainer.clearContainer();\n    }\n  }\n\n  private scroll(x: number = null, y: number = null) {\n    const { x: currentX, y: currentY } = this.getScrollPosition();\n    x = x == null ? currentX : x;\n    y = y == null ? currentY : y;\n\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (this.withScrollValue) {\n      const scrollable = this.scrollableContainerRef.nativeElement;\n      if (scrollable.scrollTo) {\n        scrollable.scrollTo(x, y);\n      } else {\n        scrollable.scrollLeft = x;\n        scrollable.scrollTop = y;\n      }\n    } else {\n      this.window.scrollTo(x, y);\n    }\n  }\n}\n"]}