{"version":3,"file":"overlay-container.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/overlay-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { NbPosition } from './overlay-position';\nimport { NbComponentPortal, NbPortalInjector, NbPortalOutletDirective, NbTemplatePortal } from './mapping';\n\nexport interface NbRenderableContainer {\n\n  /**\n   * A renderContent method renders content with provided context.\n   * Naturally, this job has to be done by ngOnChanges lifecycle hook, but\n   * ngOnChanges hook will be triggered only if we update content or context properties\n   * through template property binding syntax. But in our case we're updating these properties programmatically.\n   * */\n  renderContent();\n}\n\nexport abstract class NbPositionedContainer {\n  @Input() position: NbPosition;\n\n  @HostBinding('class.nb-overlay-top')\n  get top(): boolean {\n    return this.position === NbPosition.TOP\n  }\n\n  @HostBinding('class.nb-overlay-right')\n  get right(): boolean {\n    return this.position === NbPosition.RIGHT\n  }\n\n  @HostBinding('class.nb-overlay-bottom')\n  get bottom(): boolean {\n    return this.position === NbPosition.BOTTOM\n  }\n\n  @HostBinding('class.nb-overlay-left')\n  get left(): boolean {\n    return this.position === NbPosition.LEFT\n  }\n}\n\n\n@Component({\n  selector: 'nb-overlay-container',\n  template: `\n    <div *ngIf=\"isStringContent\" class=\"primitive-overlay\">{{ content }}</div>\n    <ng-template nbPortalOutlet></ng-template>\n  `,\n})\nexport class NbOverlayContainerComponent {\n  @ViewChild(NbPortalOutletDirective) portalOutlet: NbPortalOutletDirective;\n\n  isAttached: boolean = false;\n\n  content: string;\n\n  constructor(protected vcr: ViewContainerRef,\n              protected injector: Injector, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  get isStringContent(): boolean {\n    return !!this.content;\n  }\n\n  attachComponentPortal<T>(portal: NbComponentPortal<T>): ComponentRef<T> {\n    portal.injector = this.createChildInjector(portal.componentFactoryResolver);\n    const componentRef = this.portalOutlet.attachComponentPortal(portal);\n    componentRef.changeDetectorRef.markForCheck();\n    componentRef.changeDetectorRef.detectChanges();\n    this.isAttached = true;\n    return componentRef;\n  }\n\n  attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C> {\n    const templateRef = this.portalOutlet.attachTemplatePortal(portal);\n    templateRef.detectChanges();\n    this.isAttached = true;\n    return templateRef;\n  }\n\n  attachStringContent(content: string) {\n    this.content = content;\n    this.changeDetectorRef.markForCheck();\n    this.changeDetectorRef.detectChanges();\n    this.isAttached = true;\n  }\n\n  detach() {\n    if (this.portalOutlet.hasAttached()) {\n      this.portalOutlet.detach();\n    }\n    this.attachStringContent(null);\n    this.isAttached = false\n  }\n\n  protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector {\n    return new NbPortalInjector(this.injector, new WeakMap([\n      [ComponentFactoryResolver, cfr],\n    ]));\n  }\n}\n"]}