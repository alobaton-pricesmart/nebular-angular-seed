{"version":3,"file":"dynamic-overlay.js","sourceRoot":"","sources":["../../../../../../../.ng_build/theme/components/cdk/overlay/dynamic/dynamic-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFactoryResolver, ComponentRef, Injectable, NgZone, Type } from '@angular/core';\nimport { filter, takeUntil, takeWhile } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport {\n  NbAdjustableConnectedPositionStrategy,\n  NbPosition,\n} from '../overlay-position';\n\nimport { NbRenderableContainer } from '../overlay-container';\nimport { createContainer, NbOverlayContent, NbOverlayService, patch } from '../overlay';\nimport { NbOverlayRef } from '../mapping';\n\nexport interface NbDynamicOverlayController {\n  show();\n  hide();\n  toggle();\n  rebuild();\n}\n\n@Injectable()\nexport class NbDynamicOverlay {\n\n  protected ref: NbOverlayRef;\n  protected container: ComponentRef<NbRenderableContainer>;\n  protected componentType: Type<NbRenderableContainer>;\n  protected context: Object = {};\n  protected content: NbOverlayContent;\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n\n  protected positionStrategyChange$ = new Subject();\n  protected alive = true;\n\n  get isAttached(): boolean {\n    return this.ref && this.ref.hasAttached();\n  }\n\n  constructor(\n    private overlay: NbOverlayService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private zone: NgZone) {\n  }\n\n  create(componentType: Type<NbRenderableContainer>,\n         content: NbOverlayContent,\n         context: Object,\n         positionStrategy: NbAdjustableConnectedPositionStrategy) {\n\n    this.setContentAndContext(content, context);\n    this.setComponent(componentType);\n    this.setPositionStrategy(positionStrategy);\n\n    return this;\n  }\n\n  setContent(content: NbOverlayContent) {\n    this.content = content;\n\n    if (this.container) {\n      this.updateContext();\n    }\n  }\n\n  setContext(context: Object) {\n    this.context = context;\n\n    if (this.container) {\n      this.updateContext();\n    }\n  }\n\n  setContentAndContext(content: NbOverlayContent, context: Object) {\n    this.content = content;\n    this.context = context;\n    if (this.container) {\n      this.updateContext();\n    }\n  }\n\n  setComponent(componentType: Type<NbRenderableContainer>) {\n    this.componentType = componentType;\n\n    // in case the component is shown we recreate it and show it back\n    if (this.ref && this.isAttached) {\n      this.dispose();\n      this.show();\n    } else if (this.ref && !this.isAttached) {\n      this.dispose();\n    }\n  }\n\n  setPositionStrategy(positionStrategy: NbAdjustableConnectedPositionStrategy) {\n    this.positionStrategyChange$.next();\n\n    this.positionStrategy = positionStrategy;\n\n    this.positionStrategy.positionChange\n      .pipe(\n        takeWhile(() => this.alive),\n        takeUntil(this.positionStrategyChange$),\n        filter(() => !!this.container),\n      )\n      .subscribe((position: NbPosition) => patch(this.container, { position }));\n\n    if (this.ref) {\n      this.ref.updatePositionStrategy(this.positionStrategy);\n    }\n  }\n\n  show() {\n    if (!this.ref) {\n      this.createOverlay();\n    }\n\n    this.renderContainer();\n  }\n\n  hide() {\n    if (!this.ref) {\n      return;\n    }\n\n    this.ref.detach();\n    this.container = null;\n  }\n\n  toggle() {\n    if (this.isAttached) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  dispose() {\n    this.alive = false;\n    this.hide();\n    if (this.ref) {\n      this.ref.dispose();\n      this.ref = null;\n    }\n  }\n\n  getContainer() {\n    return this.container;\n  }\n\n  protected createOverlay() {\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    });\n    this.updatePositionWhenStable();\n  }\n\n  protected renderContainer() {\n    const containerContext = this.createContainerContext();\n    if (!this.container) {\n      this.container = createContainer(this.ref, this.componentType, containerContext, this.componentFactoryResolver);\n    }\n    this.container.instance.renderContent();\n  }\n\n  protected updateContext() {\n    const containerContext = this.createContainerContext();\n    Object.assign(this.container.instance, containerContext);\n    this.container.instance.renderContent();\n    this.container.changeDetectorRef.detectChanges();\n  }\n\n  protected createContainerContext(): Object {\n    return {\n      content: this.content,\n      context: this.context,\n      cfr: this.componentFactoryResolver,\n    };\n  }\n\n  /**\n   * Dimensions of the container may change after content update. So we listen to zone.stable event to\n   * reposition the container.\n   */\n  protected updatePositionWhenStable() {\n    this.zone.onStable\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(() => {\n        this.ref && this.ref.updatePosition();\n      });\n  }\n}\n"]}