{"version":3,"file":"overlay-position.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/overlay-position.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef, Inject, Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { NB_DOCUMENT } from '../../../theme.options';\nimport {\n  NbConnectedOverlayPositionChange,\n  NbConnectedPosition,\n  NbConnectionPositionPair,\n  NbFlexibleConnectedPositionStrategy,\n  NbOverlayPositionBuilder,\n  NbOverlayRef,\n  NbPlatform,\n  NbPositionStrategy,\n} from './mapping';\nimport { NbViewportRulerAdapter } from '../adapter/viewport-ruler-adapter';\nimport { NbGlobalLogicalPosition } from './position-helper';\nimport { GlobalPositionStrategy } from '@angular/cdk/overlay';\n\n\nexport enum NbAdjustment {\n  NOOP = 'noop',\n  CLOCKWISE = 'clockwise',\n  COUNTERCLOCKWISE = 'counterclockwise',\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n}\n\nexport enum NbPosition {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n  LEFT = 'left',\n  RIGHT = 'right',\n  START = 'start',\n  END = 'end',\n}\n\nconst POSITIONS = {\n  [NbPosition.RIGHT](offset) {\n    return { originX: 'end', originY: 'center', overlayX: 'start', overlayY: 'center', offsetX: offset };\n  },\n  [NbPosition.BOTTOM](offset) {\n    return { originX: 'center', originY: 'bottom', overlayX: 'center', overlayY: 'top', offsetY: offset };\n  },\n  [NbPosition.LEFT](offset) {\n    return { originX: 'start', originY: 'center', overlayX: 'end', overlayY: 'center', offsetX: -offset };\n  },\n  [NbPosition.TOP](offset) {\n    return { originX: 'center', originY: 'top', overlayX: 'center', overlayY: 'bottom', offsetY: -offset };\n  },\n};\n\nconst COUNTER_CLOCKWISE_POSITIONS = [NbPosition.TOP, NbPosition.LEFT, NbPosition.BOTTOM, NbPosition.RIGHT];\nconst NOOP_POSITIONS = [NbPosition.TOP, NbPosition.BOTTOM, NbPosition.LEFT, NbPosition.RIGHT];\nconst CLOCKWISE_POSITIONS = [NbPosition.TOP, NbPosition.RIGHT, NbPosition.BOTTOM, NbPosition.LEFT];\nconst VERTICAL_POSITIONS = [NbPosition.BOTTOM, NbPosition.TOP];\nconst HORIZONTAL_POSITIONS = [NbPosition.START, NbPosition.END];\n\n\nfunction comparePositions(p1: NbConnectedPosition, p2: NbConnectedPosition): boolean {\n  return p1.originX === p2.originX\n    && p1.originY === p2.originY\n    && p1.overlayX === p2.overlayX\n    && p1.overlayY === p2.overlayY;\n}\n\n/**\n * The main idea of the adjustable connected strategy is to provide predefined set of positions for your overlay.\n * You have to provide adjustment and appropriate strategy will be chosen in runtime.\n * */\nexport class NbAdjustableConnectedPositionStrategy\n  extends NbFlexibleConnectedPositionStrategy implements NbPositionStrategy {\n\n  protected _position: NbPosition;\n  protected _offset: number = 15;\n  protected _adjustment: NbAdjustment;\n\n  protected appliedPositions: { key: NbPosition, connectedPosition: NbConnectedPosition }[];\n\n  readonly positionChange: Observable<NbPosition> = this.positionChanges.pipe(\n    map((positionChange: NbConnectedOverlayPositionChange) => positionChange.connectionPair),\n    map((connectionPair: NbConnectionPositionPair) => {\n      return this.appliedPositions.find(({ connectedPosition }) => {\n        return comparePositions(connectedPosition, connectionPair);\n      }).key;\n    }),\n  );\n\n  attach(overlayRef: NbOverlayRef) {\n    /**\n     * We have to apply positions before attach because super.attach() validates positions and crashes app\n     * if no positions provided.\n     * */\n    this.applyPositions();\n    super.attach(overlayRef);\n  }\n\n  apply() {\n    this.applyPositions();\n    super.apply();\n  }\n\n  position(position: NbPosition): this {\n    this._position = position;\n    return this;\n  }\n\n  adjustment(adjustment: NbAdjustment): this {\n    this._adjustment = adjustment;\n    return this;\n  }\n\n  offset(offset: number): this {\n    this._offset = offset;\n    return this;\n  }\n\n  protected applyPositions() {\n    const positions: NbPosition[] = this.createPositions();\n    this.persistChosenPositions(positions);\n    this.withPositions(this.appliedPositions.map(({ connectedPosition }) => connectedPosition));\n  }\n\n  protected createPositions(): NbPosition[] {\n    switch (this._adjustment) {\n      case NbAdjustment.NOOP:\n        return NOOP_POSITIONS.filter(position => this._position === position);\n      case NbAdjustment.CLOCKWISE:\n        return this.reorderPreferredPositions(CLOCKWISE_POSITIONS);\n      case NbAdjustment.COUNTERCLOCKWISE:\n        return this.reorderPreferredPositions(COUNTER_CLOCKWISE_POSITIONS);\n      case NbAdjustment.HORIZONTAL:\n        return this.reorderPreferredPositions(HORIZONTAL_POSITIONS);\n      case NbAdjustment.VERTICAL:\n        return this.reorderPreferredPositions(VERTICAL_POSITIONS);\n    }\n  }\n\n  protected persistChosenPositions(positions: NbPosition[]) {\n    this.appliedPositions = positions.map(position => ({\n      key: position,\n      connectedPosition: POSITIONS[position](this._offset),\n    }));\n  }\n\n  protected reorderPreferredPositions(positions: NbPosition[]): NbPosition[] {\n    const cpy = positions.slice();\n    const startIndex = positions.indexOf(this._position);\n    const start = cpy.splice(startIndex);\n    return start.concat(...cpy);\n  }\n}\n\nexport class NbGlobalPositionStrategy extends GlobalPositionStrategy {\n\n  position(position: NbGlobalLogicalPosition): this {\n    switch (position) {\n      case NbGlobalLogicalPosition.TOP_START:\n        return this.top().left();\n\n      case NbGlobalLogicalPosition.TOP_END:\n        return this.top().right();\n\n      case NbGlobalLogicalPosition.BOTTOM_START:\n        return this.bottom().left();\n\n      case NbGlobalLogicalPosition.BOTTOM_END:\n        return this.bottom().right();\n    }\n  }\n}\n\n@Injectable()\nexport class NbPositionBuilderService {\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              protected viewportRuler: NbViewportRulerAdapter,\n              protected platform: NbPlatform,\n              protected positionBuilder: NbOverlayPositionBuilder) {\n  }\n\n  global(): NbGlobalPositionStrategy {\n    return new NbGlobalPositionStrategy();\n  }\n\n  connectedTo(elementRef: ElementRef): NbAdjustableConnectedPositionStrategy {\n    return new NbAdjustableConnectedPositionStrategy(elementRef, this.viewportRuler, this.document, this.platform)\n      .withFlexibleDimensions(false)\n      .withPush(false);\n  }\n}\n"]}