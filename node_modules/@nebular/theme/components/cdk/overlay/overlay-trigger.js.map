{"version":3,"file":"overlay-trigger.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/overlay-trigger.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentRef, Inject, Injectable } from '@angular/core';\nimport { EMPTY, fromEvent as observableFromEvent, merge as observableMerge, Observable } from 'rxjs';\nimport { debounceTime, delay, filter, repeat, share, switchMap, takeUntil, takeWhile, map } from 'rxjs/operators';\nimport { NB_DOCUMENT } from '../../../theme.options';\n\nexport enum NbTrigger {\n  NOOP = 'noop',\n  CLICK = 'click',\n  HOVER = 'hover',\n  HINT = 'hint',\n  FOCUS = 'focus',\n}\n\n/**\n * Provides entity with two event stream: show and hide.\n * Each stream provides different events depends on implementation.\n * We have three main trigger strategies: click, hint and hover.\n * */\nexport interface NbTriggerStrategy {\n  show$: Observable<never | Event>;\n  hide$: Observable<never | Event>;\n}\n\n/**\n * TODO maybe we have to use renderer.listen instead of observableFromEvent?\n * Renderer provides capability use it in service worker, ssr and so on.\n * */\nexport abstract class NbTriggerStrategyBase implements NbTriggerStrategy {\n\n  protected isNotOnHostOrContainer(event: Event): boolean {\n    return !this.isOnHost(event) && !this.isOnContainer(event);\n  }\n\n  protected isOnHostOrContainer(event: Event): boolean {\n    return this.isOnHost(event) || this.isOnContainer(event);\n  }\n\n  protected isOnHost({ target }: Event): boolean {\n    return this.host.contains(target as Node);\n  }\n\n  protected isOnContainer({ target }: Event): boolean {\n    return this.container() && this.container().location.nativeElement.contains(target);\n  }\n\n  protected isElementInBody(element: HTMLElement): boolean {\n    return this.document.body.contains(element);\n  }\n\n  protected isHostInBody(): boolean {\n    return this.isElementInBody(this.host);\n  }\n\n  abstract show$: Observable<Event>;\n  abstract hide$: Observable<Event>;\n\n  constructor(protected document: Document, protected host: HTMLElement, protected container: () => ComponentRef<any>) {\n  }\n}\n\n/**\n * Creates show and hide event streams.\n * Fires toggle event when the click was performed on the host element.\n * Fires close event when the click was performed on the document but\n * not on the host or container.\n * */\nexport class NbClickTriggerStrategy extends NbTriggerStrategyBase {\n\n  // since we should track click for both SHOW and HIDE event we firstly need to track the click and the state\n  // of the container and then later on decide should we hide it or show\n  // if we track the click & state separately this will case a behavior when the container is getting shown\n  // and then hidden right away\n  protected click$: Observable<[boolean, Event]> = observableFromEvent<Event>(this.document, 'click')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      map((event: Event) => [!this.container() && this.isOnHost(event), event] as [boolean, Event]),\n      share(),\n    );\n\n  readonly show$: Observable<Event> = this.click$\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(([shouldShow]) => shouldShow),\n      map(([, event]) => event),\n    );\n\n  readonly hide$: Observable<Event> = this.click$\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(([shouldShow, event]) => !shouldShow && !this.isOnContainer(event)),\n      map(([, event]) => event),\n    );\n}\n\n/**\n * Creates show and hide event streams.\n * Fires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\n * Fires close event when the mouse leaves the host element and stops out of the host and popover container.\n * */\nexport class NbHoverTriggerStrategy extends NbTriggerStrategyBase {\n\n  show$: Observable<Event> = observableFromEvent<Event>(this.host, 'mouseenter')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(() => !this.container()),\n      delay(100),\n      takeUntil(observableFromEvent(this.host, 'mouseleave')),\n      repeat(),\n    );\n\n  hide$: Observable<Event> = observableFromEvent<Event>(this.host, 'mouseleave')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      switchMap(() => observableFromEvent<Event>(this.document, 'mousemove')\n        .pipe(\n          takeWhile(() => this.isHostInBody()),\n          debounceTime(100),\n          takeWhile(() => !!this.container()),\n          filter(event => this.isNotOnHostOrContainer(event),\n          ),\n        ),\n      ),\n    );\n}\n\n/**\n * Creates show and hide event streams.\n * Fires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\n * Fires close event when the mouse leaves the host element.\n * */\nexport class NbHintTriggerStrategy extends NbTriggerStrategyBase {\n  show$: Observable<Event> = observableFromEvent<Event>(this.host, 'mouseenter')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      delay(100),\n      takeUntil(observableFromEvent(this.host, 'mouseleave')),\n      // this `delay & takeUntil & repeat` operators combination is a synonym for `conditional debounce`\n      // meaning that if one event occurs in some time after the initial one we won't react to it\n      repeat(),\n    );\n\n  hide$: Observable<Event> = observableFromEvent(this.host, 'mouseleave');\n}\n\n\n/**\n * Creates show and hide event streams.\n * Fires open event when a focus is on the host element and stay over at least 100 milliseconds.\n * Fires close event when the focus leaves the host element.\n * */\nexport class NbFocusTriggerStrategy extends NbTriggerStrategyBase {\n\n  protected focusOut$: Observable<Event> = observableFromEvent<Event>(this.host, 'focusout')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      switchMap(() => observableFromEvent<Event>(this.document, 'focusin')\n        .pipe(\n          takeWhile(() => !!this.container()),\n          filter(event => this.isNotOnHostOrContainer(event)),\n        ),\n      ),\n    );\n\n  protected clickIn$: Observable<Event> = observableFromEvent<Event>(this.host, 'click')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(() => !this.container()),\n    );\n\n  protected clickOut$: Observable<Event> = observableFromEvent<Event>(this.document, 'click')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(() => !!this.container()),\n      filter(event => this.isNotOnHostOrContainer(event)),\n    );\n\n  protected tabKeyPress$: Observable<Event> = observableFromEvent<Event>(this.document, 'keydown')\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter((event: KeyboardEvent) => event.keyCode === 9),\n      filter(() => !!this.container()),\n    );\n\n  show$: Observable<Event> = observableMerge(observableFromEvent<Event>(this.host, 'focusin'), this.clickIn$)\n    .pipe(\n      takeWhile(() => this.isHostInBody()),\n      filter(() => !this.container()),\n      debounceTime(100),\n      takeUntil(observableFromEvent(this.host, 'focusout')),\n      repeat(),\n    );\n\n  hide$ = observableMerge(this.focusOut$, this.tabKeyPress$, this.clickOut$)\n    .pipe(takeWhile(() => this.isHostInBody()));\n}\n\n@Injectable()\nexport class NbTriggerStrategyBuilderService {\n\n  protected _host: HTMLElement;\n  protected _container: () => ComponentRef<any>;\n  protected _trigger: NbTrigger;\n\n  constructor(@Inject(NB_DOCUMENT) protected _document) {\n  }\n\n  trigger(trigger: NbTrigger): this {\n    this._trigger = trigger;\n    return this;\n  }\n\n  host(host: HTMLElement): this {\n    this._host = host;\n    return this;\n  }\n\n  container(container: () => ComponentRef<any>): this {\n    this._container = container;\n    return this;\n  }\n\n  build(): NbTriggerStrategy {\n    switch (this._trigger) {\n      case NbTrigger.CLICK:\n        return new NbClickTriggerStrategy(this._document, this._host, this._container);\n      case NbTrigger.HINT:\n        return new NbHintTriggerStrategy(this._document, this._host, this._container);\n      case NbTrigger.HOVER:\n        return new NbHoverTriggerStrategy(this._document, this._host, this._container);\n      case NbTrigger.FOCUS:\n        return new NbFocusTriggerStrategy(this._document, this._host, this._container);\n      case NbTrigger.NOOP:\n        return {\n          show$: EMPTY,\n          hide$: EMPTY,\n        };\n      default:\n        throw new Error('Trigger have to be provided');\n    }\n  }\n}\n"]}