{"version":3,"file":"mapping.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/mapping.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,UAAU,EAEV,QAAQ,GAGT,MAAM,eAAe,CAAC;AACvB,OAAO,EACL,SAAS,EACT,eAAe,EACf,eAAe,EAEf,cAAc,EACd,YAAY,EACZ,cAAc,GACf,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAKL,iCAAiC,EACjC,OAAO,EAEP,gBAAgB,EAChB,aAAa,EACb,sBAAsB,GAKvB,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;;;AAIjD;IAAuC,qCAAS;IAAhD;;IACA,CAAC;IADY,iBAAiB;QAD7B,SAAS,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;OACzB,iBAAiB,CAC7B;IAAD,wBAAC;CAAA,AADD,CAAuC,SAAS,GAC/C;SADY,iBAAiB;AAI9B;IAA6C,2CAAe;IAA5D;;IACA,CAAC;IADY,uBAAuB;QADnC,SAAS,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;OAC/B,uBAAuB,CACnC;IAAD,8BAAC;CAAA,AADD,CAA6C,eAAe,GAC3D;SADY,uBAAuB;AAGpC;IAAgD,qCAAkB;IAAlE;;IACA,CAAC;IAAD,wBAAC;AAAD,CAAC,AADD,CAAgD,eAAe,GAC9D;;AAGD;IAA+B,6BAAO;IAAtC;;IACA,CAAC;IADY,SAAS;QADrB,UAAU,EAAE;OACA,SAAS,CACrB;IAAD,gBAAC;CAAA,AADD,CAA+B,OAAO,GACrC;SADY,SAAS;AAItB;IAAgC,8BAAQ;IAAxC;;IACA,CAAC;IADY,UAAU;QADtB,UAAU,EAAE;OACA,UAAU,CACtB;IAAD,iBAAC;CAAA,AADD,CAAgC,QAAQ,GACvC;SADY,UAAU;AAIvB;IAA8C,4CAAsB;IAApE;;IACA,CAAC;IADY,wBAAwB;QADpC,UAAU,EAAE;OACA,wBAAwB,CACpC;IAAD,+BAAC;CAAA,AADD,CAA8C,sBAAsB,GACnE;SADY,wBAAwB;AAGrC;IAA+C,oCAAiB;IAC9D,0BAAY,QAAwB,EAAE,gBAAmC,EAAE,OAAW;eACpF,kBAAM,QAAQ,EAAE,gBAAgB,EAAE,OAAO,CAAC;IAC5C,CAAC;IACH,uBAAC;AAAD,CAAC,AAJD,CAA+C,cAAc,GAI5D;;AAED;IAAwC,sCAAgB;IAAxD;;KACC;;6BAlED;CAkEC,AADD,CAAwC,gBAAgB,GACvD;SADY,kBAAkB;AAG/B;IAAyD,uDAAiC;IAA1F;;IACA,CAAC;IAAD,0CAAC;AAAD,CAAC,AADD,CAAyD,iCAAiC,GACzF;;AAED;IAAsC,oCAAc;IAApD;;IACA,CAAC;IAAD,uBAAC;AAAD,CAAC,AADD,CAAsC,cAAc,GACnD;;AAaD,IAAM,WAAW,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAElD;;;KAGK;AAUL;IAAA;IAWA,CAAC;2BAXY,kBAAkB;IACtB,0BAAO,GAAd;QACE,OAA6B;YAC3B,QAAQ,EAAE,oBAAkB;YAC5B,SAAS,EAAE;gBACT,SAAS;gBACT,UAAU;gBACV,wBAAwB;aACzB;SACF,CAAC;IACJ,CAAC;;IAVU,kBAAkB;QAT9B,QAAQ,CAAC;YACR,OAAO,EAAM,WAAW,QAAC;YACzB,OAAO,EACF,WAAW;gBACd,iBAAiB;gBACjB,uBAAuB;cACxB;YACD,YAAY,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;SAC3D,CAAC;OACW,kBAAkB,CAW9B;IAAD,yBAAC;CAAA,AAXD,IAWC;SAXY,kBAAkB","sourcesContent":["import {\n  Directive,\n  Injectable,\n  ModuleWithProviders,\n  NgModule,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  CdkPortal,\n  CdkPortalOutlet,\n  ComponentPortal,\n  Portal,\n  PortalInjector,\n  PortalModule,\n  TemplatePortal,\n} from '@angular/cdk/portal';\nimport {\n  ComponentType,\n  ConnectedOverlayPositionChange,\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayModule,\n  OverlayPositionBuilder,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n  ScrollStrategyOptions,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\n\n\n@Directive({ selector: '[nbPortal]' })\nexport class NbPortalDirective extends CdkPortal {\n}\n\n@Directive({ selector: '[nbPortalOutlet]' })\nexport class NbPortalOutletDirective extends CdkPortalOutlet {\n}\n\nexport class NbComponentPortal<T = any> extends ComponentPortal<T> {\n}\n\n@Injectable()\nexport class NbOverlay extends Overlay {\n}\n\n@Injectable()\nexport class NbPlatform extends Platform {\n}\n\n@Injectable()\nexport class NbOverlayPositionBuilder extends OverlayPositionBuilder {\n}\n\nexport class NbTemplatePortal<T = any> extends TemplatePortal<T> {\n  constructor(template: TemplateRef<T>, viewContainerRef?: ViewContainerRef, context?: T) {\n    super(template, viewContainerRef, context);\n  }\n}\n\nexport class NbOverlayContainer extends OverlayContainer {\n}\n\nexport class NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {\n}\n\nexport class NbPortalInjector extends PortalInjector {\n}\n\nexport type NbPortal<T = any> = Portal<T>;\nexport type NbOverlayRef = OverlayRef;\nexport type NbComponentType<T = any> = ComponentType<T>;\nexport type NbPositionStrategy = PositionStrategy;\nexport type NbConnectedPosition = ConnectedPosition;\nexport type NbConnectedOverlayPositionChange = ConnectedOverlayPositionChange;\nexport type NbConnectionPositionPair = ConnectionPositionPair;\nexport type NbOverlayConfig = OverlayConfig;\nexport type NbScrollStrategyOptions = ScrollStrategyOptions;\nexport type NbScrollStrategy = ScrollStrategy;\n\nconst CDK_MODULES = [OverlayModule, PortalModule];\n\n/**\n * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\n * Approach will help us move cdk in separate npm package and refactor nebular/theme code.\n * */\n@NgModule({\n  imports: [...CDK_MODULES],\n  exports: [\n    ...CDK_MODULES,\n    NbPortalDirective,\n    NbPortalOutletDirective,\n  ],\n  declarations: [NbPortalDirective, NbPortalOutletDirective],\n})\nexport class NbCdkMappingModule {\n  static forRoot(): ModuleWithProviders {\n    return <ModuleWithProviders> {\n      ngModule: NbCdkMappingModule,\n      providers: [\n        NbOverlay,\n        NbPlatform,\n        NbOverlayPositionBuilder,\n      ],\n    };\n  }\n}\n"]}