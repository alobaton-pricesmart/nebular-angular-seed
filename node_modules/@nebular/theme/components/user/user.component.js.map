{"version":3,"file":"user.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/user/user.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Represents a component showing a user avatar (picture) with a user name on the right.\n * @stacked-example(Showcase, user/user-showcase.component)\n *\n * ```ts\n *   <nb-user name=\"John Doe\" title=\"Engineer\"></nb-user>\n * ```\n *\n * ### Installation\n *\n * Import `NbUserModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbUserModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Available in multiple sizes:\n * @stacked-example(Multiple Sizes, user/user-sizes.component)\n *\n *\n * You can hide unnecessary captions (name, title or both):\n * @stacked-example(Hide captions in user component, user/user-hide-captions.component)\n *\n *\n * You can set custom avatar background-color, user image (as link or BASE64 string) and disable user initials:\n * @stacked-example(Avatar image settings, user/user-avatar-settings.component)\n *\n *\n * @styles\n *\n * user-font-size:\n * user-line-height:\n * user-bg:\n * user-fg:\n * user-fg-highlight:\n * user-font-family-secondary:\n * user-size-small:\n * user-size-medium:\n * user-size-large:\n * user-size-xlarge:\n */\n@Component({\n  selector: 'nb-user',\n  styleUrls: ['./user.component.css'],\n  templateUrl: './user.component.html',\n})\nexport class NbUserComponent {\n\n  // TODO: it makes sense use object instead of list of variables (or even enum)\n  /*\n    static readonly SIZE = {\n     SMALL: 'small',\n     MEDIUM: 'medium',\n     LARGE: 'large',\n    };\n   */\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n  static readonly SIZE_XLARGE = 'xlarge';\n\n  private sizeValue: string;\n\n  @HostBinding('class.inverse') inverseValue: boolean;\n\n  @HostBinding('class.small')\n  get small() {\n    return this.sizeValue === NbUserComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.medium')\n  get medium() {\n    return this.sizeValue === NbUserComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.large')\n  get large() {\n    return this.sizeValue === NbUserComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.xlarge')\n  get xlarge() {\n    return this.sizeValue === NbUserComponent.SIZE_XLARGE;\n  }\n\n  /**\n   * Specifies a name to be shown on the right of a user picture\n   * @type string\n   */\n  @Input() name: string = 'Anonymous';\n\n  /**\n   * Specifies a title (written in a smaller font) to be shown under the **name**\n   * @type string\n   */\n  @Input() title: string;\n\n  /**\n   * Absolute path to a user picture. Or base64 image\n   * User name initials (JD for John Doe) will be shown if no picture specified\n   * @type string\n   */\n  @Input() set picture(value: string) {\n    this.imageBackgroundStyle = value ? this.domSanitizer.bypassSecurityTrustStyle(`url(${value})`) : null;\n  }\n\n  /**\n   * Color of the area shown when no picture specified\n   * @type string\n   */\n  @Input() color: string;\n\n  /**\n   * Size of the component, small|medium|large|xlarge\n   * @type string\n   */\n  @Input()\n  set size(val: string) {\n    this.sizeValue = val;\n  }\n\n  /**\n   * Whether to show a user name or not\n   * @type boolean\n   */\n  @Input()\n  set showName(val: boolean) {\n    this.showNameValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show a user title or not\n   * @type boolean\n   */\n  @Input()\n  set showTitle(val: boolean) {\n    this.showTitleValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show a user initials (if no picture specified) or not\n   * @type boolean\n   */\n  @Input()\n  set showInitials(val: boolean) {\n    this.showInitialsValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show only a picture or also show the name and title\n   * @type boolean\n   */\n  @Input()\n  set onlyPicture(val: boolean) {\n    this.showNameValue = this.showTitleValue = !convertToBoolProperty(val);\n  }\n\n  /**\n   * Makes colors inverse based on current theme\n   * @type boolean\n   */\n  @Input()\n  set inverse(val: boolean) {\n    this.inverseValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Badge text to display\n   * @type string\n   */\n  @Input() badgeText: string;\n\n  /**\n   * Badge status (adds specific styles):\n   * 'primary', 'info', 'success', 'warning', 'danger'\n   * @param {string} val\n   */\n  @Input() badgeStatus: string;\n\n  /**\n   * Badge position.\n   * Can be set to any class or to one of predefined positions:\n   * 'top left', 'top right', 'bottom left', 'bottom right',\n   * 'top start', 'top end', 'bottom start', 'bottom end'\n   * @type string\n   */\n  @Input() badgePosition: string;\n\n  imageBackgroundStyle: SafeStyle;\n  showNameValue: boolean = true;\n  showTitleValue: boolean = true;\n  showInitialsValue: boolean = true;\n  isMenuShown: boolean = false;\n\n  constructor(private domSanitizer: DomSanitizer) { }\n\n  getInitials(): string {\n    if (this.name) {\n      const names = this.name.split(' ');\n\n      return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n    }\n\n    return '';\n  }\n}\n"]}