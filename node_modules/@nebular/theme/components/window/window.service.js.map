{"version":3,"file":"window.service.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/window/window.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport {\n  NbComponentPortal,\n  NbComponentType,\n  NbOverlayPositionBuilder,\n  NbOverlayRef,\n  NbOverlayService,\n} from '../cdk/overlay';\nimport { NbBlockScrollStrategyAdapter } from '../cdk/adapter/block-scroll-strategy-adapter';\nimport {\n  NB_WINDOW_CONFIG,\n  NB_WINDOW_CONTENT,\n  NB_WINDOW_CONTEXT,\n  NbWindowConfig,\n  NbWindowState,\n} from './window.options';\nimport { NbWindowRef } from './window-ref';\nimport { NbWindowsContainerComponent } from './windows-container.component';\nimport { NbWindowComponent } from './window.component';\n\n/**\n * The `NbWindowService` can be used to open windows.\n *\n * @stacked-example(Showcase, window/window-showcase.component)\n *\n * ### Installation\n *\n * Import `NbWindowModule` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbWindowModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * If you are using it in a lazy loaded module than you have to install `NbWindowModule.forChild`:\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbWindowModule.forChild(config),\n *   ],\n * })\n * export class LazyLoadedModule { }\n * ```\n *\n * ### Usage\n *\n * A new window can be opened by calling the `open` method with a component or template to be loaded\n * and an optional configuration.\n * `open` method will return `NbWindowRef` that can be used for the further manipulations.\n *\n * ```ts\n * const windowRef = this.windowService.open(MyComponent, { ... });\n * ```\n *\n * `NbWindowRef` gives you ability manipulate opened window.\n * Also, you can inject `NbWindowRef` inside provided component which rendered in window.\n *\n * ```ts\n * this.windowService.open(MyWindowComponent, { ... });\n *\n * // my.component.ts\n * constructor(protected windowRef: NbWindowRef) {\n * }\n *\n * minimize() {\n *   this.windowRef.minimize();\n * }\n *\n * close() {\n *   this.windowRef.close();\n * }\n * ```\n *\n * Instead of component you can create window from TemplateRef. As usual you can access context provided via config\n * via `let-` variables. Also you can get reference to the `NbWindowRef` in context's `windowRef` property.\n *\n * @stacked-example(Window content from TemplateRef, window/template-window.component)\n *\n * ### Configuration\n *\n * As mentioned above, `open` method of the `NbWindowService` may receive optional configuration options.\n * Also, you can modify default windows configuration through `NbWindowModule.forRoot({ ... })`.\n * You can read about all available options on [API tab](docs/components/window/api#nbwindowconfig).\n *\n * @stacked-example(Configuration, window/windows-backdrop.component)\n */\n@Injectable()\nexport class NbWindowService {\n\n  protected overlayRef: NbOverlayRef;\n  protected windowsContainerViewRef: ViewContainerRef;\n  protected openWindows: NbWindowRef[] = [];\n\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected overlayService: NbOverlayService,\n    protected overlayPositionBuilder: NbOverlayPositionBuilder,\n    protected blockScrollStrategy: NbBlockScrollStrategyAdapter,\n    @Inject(NB_WINDOW_CONFIG) protected readonly defaultWindowsConfig: NbWindowConfig,\n    protected cfr: ComponentFactoryResolver,\n  ) {\n  }\n\n  /**\n   * Opens new window.\n   * @param windowContent\n   * @param windowConfig\n   * */\n  open(\n    windowContent: TemplateRef<any> | NbComponentType,\n    windowConfig: Partial<NbWindowConfig> = {},\n  ): NbWindowRef {\n    if (this.windowsContainerViewRef == null) {\n      this.createWindowsContainer();\n    }\n\n    const config = new NbWindowConfig(this.defaultWindowsConfig, windowConfig);\n    const windowRef = new NbWindowRef(config);\n    windowRef.componentRef = this.appendWindow(windowContent, config, windowRef);\n\n    this.openWindows.push(windowRef);\n    this.subscribeToEvents(windowRef);\n\n    return windowRef;\n  }\n\n  protected createWindowsContainer() {\n    this.overlayRef = this.overlayService.create({\n      scrollStrategy: this.overlayService.scrollStrategies.noop(),\n      positionStrategy: this.overlayPositionBuilder.global().bottom().right(),\n      hasBackdrop: true,\n    });\n    const windowsContainerPortal = new NbComponentPortal(NbWindowsContainerComponent, null, null, this.cfr);\n    const overlayRef = this.overlayRef.attach(windowsContainerPortal);\n    this.windowsContainerViewRef = overlayRef.instance.viewContainerRef;\n  }\n\n  protected appendWindow(\n    content: TemplateRef<any> | NbComponentType,\n    config: NbWindowConfig,\n    windowRef: NbWindowRef,\n  ): ComponentRef<NbWindowComponent> {\n    const context = content instanceof TemplateRef\n      ? { $implicit: config.context, windowRef }\n      : config.context;\n\n    const providers = [\n      { provide: NB_WINDOW_CONTENT, useValue: content },\n      { provide: NB_WINDOW_CONTEXT, useValue: context },\n      { provide: NbWindowConfig, useValue: config },\n      { provide: NbWindowRef, useValue: windowRef },\n    ];\n    const parentInjector = config.viewContainerRef\n      ? config.viewContainerRef.injector\n      : this.windowsContainerViewRef.injector;\n    const injector = Injector.create({ parent: parentInjector, providers });\n    const windowFactory = this.componentFactoryResolver.resolveComponentFactory(NbWindowComponent);\n\n    const ref = this.windowsContainerViewRef.createComponent(windowFactory, null, injector);\n    ref.instance.cfr = this.cfr;\n    ref.changeDetectorRef.detectChanges();\n    return ref\n  }\n\n  protected subscribeToEvents(windowRef: NbWindowRef) {\n    if (windowRef.config.closeOnBackdropClick) {\n      this.overlayRef.backdropClick().subscribe(() => windowRef.close());\n    }\n\n    if (windowRef.config.closeOnEsc) {\n      this.overlayRef.keydownEvents()\n        .pipe(filter((event: KeyboardEvent) => event.keyCode === 27))\n        .subscribe(() => windowRef.close());\n    }\n\n    windowRef.stateChange.subscribe(() => this.checkAndUpdateOverlay());\n\n    windowRef.onClose.subscribe(() => {\n      this.openWindows.splice(this.openWindows.indexOf(windowRef), 1);\n      this.checkAndUpdateOverlay();\n    });\n  }\n\n  protected checkAndUpdateOverlay() {\n    const fullScreenWindows = this.openWindows.filter(w => w.state === NbWindowState.FULL_SCREEN);\n    if (fullScreenWindows.length > 0) {\n      this.blockScrollStrategy.enable();\n    } else {\n      this.blockScrollStrategy.disable();\n    }\n\n    if (fullScreenWindows.some(w => w.config.hasBackdrop)) {\n      this.overlayRef.backdropElement.removeAttribute('hidden');\n    } else {\n      this.overlayRef.backdropElement.setAttribute('hidden', '');\n    }\n  }\n}\n"]}