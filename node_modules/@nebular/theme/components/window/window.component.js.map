{"version":3,"file":"window.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/window/window.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  Renderer2,\n  ViewChild,\n  Type,\n  ComponentFactoryResolver,\n  Input,\n  AfterViewChecked,\n} from '@angular/core';\nimport {\n  NbComponentPortal,\n  NbFocusTrap,\n  NbFocusTrapFactoryService,\n  NbOverlayContainerComponent,\n  NbTemplatePortal,\n} from '../cdk';\nimport { NbComponentType } from '../cdk/overlay';\nimport { NB_WINDOW_CONTENT, NbWindowConfig, NbWindowState, NB_WINDOW_CONTEXT } from './window.options';\nimport { NbWindowRef } from './window-ref';\n\n@Component({\n  selector: 'nb-window',\n  template: `\n    <nb-card>\n      <nb-card-header>\n        <div cdkFocusInitial class=\"title\" tabindex=\"-1\">{{ config.title }}</div>\n\n        <div class=\"buttons\">\n          <button class=\"button\" (click)=\"minimize()\">\n            <i class=\"nb-fold\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"isFullScreen\" (click)=\"maximize()\">\n            <i class=\"nb-minimize\"></i>\n          </button>\n          <button class=\"button\" *ngIf=\"minimized || maximized\" (click)=\"maximizeOrFullScreen()\">\n            <i class=\"nb-maximize\"></i>\n          </button>\n          <button class=\"button\" (click)=\"close()\">\n            <i class=\"nb-close\"></i>\n          </button>\n        </div>\n      </nb-card-header>\n      <nb-card-body *ngIf=\"maximized || isFullScreen\">\n        <nb-overlay-container></nb-overlay-container>\n      </nb-card-body>\n    </nb-card>\n  `,\n  styleUrls: ['./window.component.css'],\n})\nexport class NbWindowComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @Input() cfr: ComponentFactoryResolver;\n\n  @HostBinding('class.full-screen')\n  get isFullScreen() {\n    return this.windowRef.state === NbWindowState.FULL_SCREEN;\n  }\n\n  @HostBinding('class.maximized')\n  get maximized() {\n    return this.windowRef.state === NbWindowState.MAXIMIZED;\n  }\n\n  @HostBinding('class.minimized')\n  get minimized() {\n    return this.windowRef.state === NbWindowState.MINIMIZED;\n  }\n\n  @ViewChild(NbOverlayContainerComponent) overlayContainer: NbOverlayContainerComponent;\n\n  protected focusTrap: NbFocusTrap;\n\n  constructor(\n    @Inject(NB_WINDOW_CONTENT) public content: TemplateRef<any> | NbComponentType,\n    @Inject(NB_WINDOW_CONTEXT) public context: Object,\n    public windowRef: NbWindowRef,\n    public config: NbWindowConfig,\n    protected focusTrapFactory: NbFocusTrapFactoryService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    this.focusTrap.blurPreviouslyFocusedElement();\n    this.focusTrap.focusInitialElement();\n\n    if (this.config.windowClass) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.config.windowClass);\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (!this.overlayContainer || this.overlayContainer.isAttached) {\n      return;\n    }\n\n    if (this.content instanceof TemplateRef) {\n      this.attachTemplate();\n    } else {\n      this.attachComponent();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.focusTrap) {\n      this.focusTrap.restoreFocus();\n    }\n\n    this.close();\n  }\n\n  minimize() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED) {\n      this.windowRef.toPreviousState();\n    } else {\n      this.windowRef.minimize();\n    }\n  }\n\n  maximize() {\n    this.windowRef.maximize();\n  }\n\n  fullScreen() {\n    this.windowRef.fullScreen();\n  }\n\n  maximizeOrFullScreen() {\n    if (this.windowRef.state === NbWindowState.MINIMIZED) {\n      this.maximize();\n    } else {\n      this.fullScreen();\n    }\n  }\n\n  close() {\n    this.windowRef.close();\n  }\n\n  protected attachTemplate() {\n    this.overlayContainer.attachTemplatePortal(new NbTemplatePortal(this.content as TemplateRef<any>, null, {\n      $implicit: this.context,\n    }));\n  }\n\n  protected attachComponent() {\n    const portal = new NbComponentPortal(this.content as Type<any>, null, null, this.cfr);\n    const ref = this.overlayContainer.attachComponentPortal(portal);\n    Object.assign(ref.instance, this.context);\n    ref.changeDetectorRef.detectChanges();\n  }\n}\n"]}