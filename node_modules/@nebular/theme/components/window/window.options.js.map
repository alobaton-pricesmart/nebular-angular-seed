{"version":3,"file":"window.options.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/window/window.options.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,cAAc,EAAoB,MAAM,eAAe,CAAC;AAM9E,MAAM,CAAN,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,wCAAuB,CAAA;IACvB,wCAAuB,CAAA;IACvB,4CAA2B,CAAA;AAC7B,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;AAOD;;GAEG;AACH;IAiDE;QAAY,iBAAqC;aAArC,UAAqC,EAArC,qBAAqC,EAArC,IAAqC;YAArC,4BAAqC;;QAhDjD;;WAEG;QACH,UAAK,GAAW,EAAE,CAAC;QAEnB;;WAEG;QACH,iBAAY,GAAkB,aAAa,CAAC,WAAW,CAAC;QAExD;;;WAGG;QACH,gBAAW,GAAY,IAAI,CAAC;QAE5B;;;WAGG;QACH,yBAAoB,GAAY,IAAI,CAAC;QAErC;;;WAGG;QACH,eAAU,GAAY,IAAI,CAAC;QAE3B;;WAEG;QACH,gBAAW,GAAW,EAAE,CAAC;QAEzB;;;;WAIG;QACH,YAAO,GAAY,EAAE,CAAC;QAEtB;;;;;WAKG;QACH,qBAAgB,GAAqB,IAAI,CAAC;QAGxC,MAAM,CAAC,MAAM,OAAb,MAAM,GAAQ,IAAI,SAAK,OAAO,GAAE;IAClC,CAAC;IACH,qBAAC;AAAD,CAAC,AApDD,IAoDC;;AAED,MAAM,CAAC,IAAM,iBAAiB,GAAG,IAAI,cAAc,CAAqC,wBAAwB,CAAC,CAAC;AAClH,MAAM,CAAC,IAAM,gBAAgB,GAAG,IAAI,cAAc,CAAiB,uBAAuB,CAAC,CAAC;AAC5F,MAAM,CAAC,IAAM,iBAAiB,GAAG,IAAI,cAAc,CAAS,wBAAwB,CAAC,CAAC","sourcesContent":["import { TemplateRef, InjectionToken, ViewContainerRef } from '@angular/core';\n// Do not remove (TS4023).\n// tslint:disable-next-line\nimport { ComponentType } from '@angular/cdk/overlay';\nimport { NbComponentType } from '../cdk/overlay';\n\nexport enum NbWindowState {\n  MINIMIZED = 'minimized',\n  MAXIMIZED = 'maximized',\n  FULL_SCREEN = 'full-screen',\n}\n\nexport interface NbWindowStateChange {\n  oldState: NbWindowState;\n  newState: NbWindowState;\n}\n\n/**\n * Window configuration options.\n */\nexport class NbWindowConfig {\n  /**\n   * Window title.\n   */\n  title: string = '';\n\n  /**\n   * Initial window state. Full screen by default.\n   */\n  initialState: NbWindowState = NbWindowState.FULL_SCREEN;\n\n  /**\n   * If true than backdrop will be rendered behind window.\n   * By default set to true.\n   */\n  hasBackdrop: boolean = true;\n\n  /**\n   * If set to true mouse clicks on backdrop will close a window.\n   * Default is true.\n   */\n  closeOnBackdropClick: boolean = true;\n\n  /**\n   * If true then escape press will close a window.\n   * Default is true.\n   */\n  closeOnEsc: boolean = true;\n\n  /**\n   * Class to be applied to the window.\n   */\n  windowClass: string = '';\n\n  /**\n   * Both, template and component may receive data through `config.context` property.\n   * For components, this data will be set as component properties.\n   * For templates, you can access it inside template as $implicit.\n   */\n  context?: Object = {};\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the window. This does not affect where the window\n   * content will be rendered.\n   */\n  viewContainerRef: ViewContainerRef = null;\n\n  constructor(...configs: Partial<NbWindowConfig>[]) {\n    Object.assign(this, ...configs);\n  }\n}\n\nexport const NB_WINDOW_CONTENT = new InjectionToken<TemplateRef<any> | NbComponentType>('Nebular Window Content');\nexport const NB_WINDOW_CONFIG = new InjectionToken<NbWindowConfig>('Nebular Window Config');\nexport const NB_WINDOW_CONTEXT = new InjectionToken<Object>('Nebular Window Context');\n"]}