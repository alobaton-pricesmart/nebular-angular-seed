{"version":3,"file":"calendar-range.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/calendar/calendar-range.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, EventEmitter, Input, Output, Type } from '@angular/core';\n\nimport { NbCalendarCell, NbCalendarSize, NbCalendarViewMode, NbDateService } from '../calendar-kit';\nimport { NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent } from './calendar-range-cells';\n\n\nexport interface NbCalendarRange<D> {\n  start: D;\n  end?: D;\n}\n\n/**\n * CalendarRange component provides a capability to choose a date range.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarRangeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbCalendarRangeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * CalendarRange component supports all of the Calendar component customization properties. More defails can be found\n * in the [Calendar component docs](docs/components/calendar).\n *\n * @styles\n *\n * calendar-width\n * calendar-body-height\n * calendar-header-title-font-size\n * calendar-header-title-font-weight\n * calendar-header-sub-title-font-size\n * calendar-header-sub-title-font-weight\n * calendar-navigation-button-width\n * calendar-selected-item-bg\n * calendar-hover-item-bg\n * calendar-today-item-bg\n * calendar-active-item-bg\n * calendar-fg\n * calendar-selected-fg\n * calendar-day-cell-width\n * calendar-day-cell-height\n * calendar-month-cell-width\n * calendar-month-cell-height\n * calendar-year-cell-width\n * calendar-year-cell-height\n * calendar-inactive-opacity\n * calendar-disabled-opacity\n * calendar-border-radius\n * calendar-weekday-width\n * calendar-weekday-height\n * calendar-weekday-font-size\n * calendar-weekday-font-weight\n * calendar-weekday-fg\n * calendar-weekday-holiday-fg\n * calendar-range-bg-in-range\n * calendar-large-width\n * calendar-large-body-height\n * calendar-day-cell-large-width\n * calendar-day-cell-large-height\n * calendar-month-cell-large-width\n * calendar-month-cell-large-height\n * calendar-year-cell-large-width\n * calendar-year-cell-large-height\n * */\n@Component({\n  selector: 'nb-calendar-range',\n  template: `\n    <nb-base-calendar\n      [date]=\"range\"\n      (dateChange)=\"onChange($event)\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [filter]=\"filter\"\n      [startView]=\"startView\"\n      [boundingMonth]=\"boundingMonth\"\n      [dayCellComponent]=\"dayCellComponent\"\n      [monthCellComponent]=\"monthCellComponent\"\n      [yearCellComponent]=\"yearCellComponent\"\n      [visibleDate]=\"visibleDate\"\n      [showHeader]=\"showHeader\"\n      [size]=\"size\"\n    ></nb-base-calendar>\n  `,\n})\nexport class NbCalendarRangeComponent<D> {\n  /**\n   * Defines if we should render previous and next months\n   * in the current month view.\n   * */\n  @Input() boundingMonth: boolean = true;\n\n  /**\n   * Defines starting view for the calendar.\n   * */\n  @Input() startView: NbCalendarViewMode = NbCalendarViewMode.DATE;\n\n  /**\n   * A minimum available date for selection.\n   * */\n  @Input() min: D;\n\n  /**\n   * A maximum available date for selection.\n   * */\n  @Input() max: D;\n\n  /**\n   * A predicate that decides which cells will be disabled.\n   * */\n  @Input() filter: (D) => boolean;\n\n  /**\n   * Custom day cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('dayCellComponent')\n  set _cellComponent(cellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>>) {\n    if (cellComponent) {\n      this.dayCellComponent = cellComponent;\n    }\n  }\n  dayCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>> = NbCalendarRangeDayCellComponent;\n\n  /**\n   * Custom month cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input() monthCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>>;\n\n  /**\n   * Custom year cell component. Have to implement `NbCalendarCell` interface.\n   * */\n  @Input('yearCellComponent')\n  set _yearCellComponent(cellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>>) {\n    if (cellComponent) {\n      this.yearCellComponent = cellComponent;\n    }\n  }\n  yearCellComponent: Type<NbCalendarCell<D, NbCalendarRange<D>>> = NbCalendarRangeYearCellComponent;\n\n  /**\n   * Size of the calendar and entire components.\n   * Can be 'medium' which is default or 'large'.\n   * */\n  @Input() size: NbCalendarSize = NbCalendarSize.MEDIUM;\n\n  @Input() visibleDate: D;\n\n  /**\n   * Determines should we show calendars header or not.\n   * */\n  @Input() showHeader: boolean = true;\n\n  /**\n   * Range which will be rendered as selected.\n   * */\n  @Input() range: NbCalendarRange<D>;\n\n  /**\n   * Emits range when start selected and emits again when end selected.\n   * */\n  @Output() rangeChange: EventEmitter<NbCalendarRange<D>> = new EventEmitter();\n\n  constructor(protected dateService: NbDateService<D>) {\n  }\n\n  onChange(date: D) {\n    this.initDateIfNull();\n    this.handleSelected(date);\n  }\n\n  private initDateIfNull() {\n    if (!this.range) {\n      this.range = { start: null, end: null };\n    }\n  }\n\n  private handleSelected(date: D) {\n    if (this.selectionStarted()) {\n      this.selectEnd(date);\n    } else {\n      this.selectStart(date);\n    }\n  }\n\n  private selectionStarted(): boolean {\n    const { start, end } = this.range;\n    return start && !end;\n  }\n\n  private selectStart(start: D) {\n    this.selectRange({ start });\n  }\n\n  private selectEnd(date: D) {\n    const { start } = this.range;\n\n    if (this.dateService.compareDates(date, start) > 0) {\n      this.selectRange({ start, end: date });\n    } else {\n      this.selectRange({ start: date, end: start });\n    }\n  }\n\n  private selectRange(range: NbCalendarRange<D>) {\n    this.range = range;\n    this.rangeChange.emit(range);\n  }\n}\n"]}