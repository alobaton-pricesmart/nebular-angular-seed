{"version":3,"file":"tree-grid-def.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/tree-grid/tree-grid-def.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input, IterableDiffers, TemplateRef } from '@angular/core';\nimport {\n  NbCdkCellDef,\n  NbCdkFooterCellDef,\n  NbCdkFooterRowDef,\n  NbCdkHeaderCellDef,\n  NbCdkHeaderRowDef,\n  NbCdkRowDef,\n  NbCellDefDirective,\n  NbFooterCellDefDirective,\n  NbFooterRowDefDirective,\n  NbHeaderCellDefDirective,\n  NbHeaderRowDefDirective,\n  NbRowDefDirective,\n} from '../cdk/table';\nimport { NbColumnsService } from './tree-grid-columns.service';\n\nexport interface NbTreeGridResponsiveRowDef {\n  hideColumn(column: string);\n  showColumn(column: string);\n}\n\n/**\n * Data row definition for the tree-grid.\n * Captures the header row's template and columns to display.\n */\n@Directive({\n  selector: '[nbTreeGridRowDef]',\n  providers: [{ provide: NbCdkRowDef, useExisting: NbTreeGridRowDefDirective }],\n})\nexport class NbTreeGridRowDefDirective<T> extends NbRowDefDirective<T> implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridRowDefColumns')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n@Directive({\n  selector: '[nbTreeGridHeaderRowDef]',\n  providers: [{ provide: NbCdkHeaderRowDef, useExisting: NbTreeGridHeaderRowDefDirective }],\n})\nexport class NbTreeGridHeaderRowDefDirective extends NbHeaderRowDefDirective implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridHeaderRowDef')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n@Directive({\n  selector: '[nbTreeGridFooterRowDef]',\n  providers: [{ provide: NbCdkFooterRowDef, useExisting: NbTreeGridFooterRowDefDirective }],\n})\nexport class NbTreeGridFooterRowDefDirective extends NbFooterRowDefDirective implements NbTreeGridResponsiveRowDef {\n  /**\n   * Columns to be displayed on this row\n   */\n  @Input('nbTreeGridFooterRowDef')\n  set columns(value: Iterable<string>) {\n    this.columnsService.setColumns(value)\n  }\n  get columns(): Iterable<string> {\n    return this.columnsService.getVisibleColumns();\n  }\n\n  constructor(\n    template: TemplateRef<any>,\n    differs: IterableDiffers,\n    private columnsService: NbColumnsService,\n  ) {\n    super(template, differs);\n  }\n\n  /** @docs-private */\n  hideColumn(column: string): void {\n    this.columnsService.hideColumn(column);\n  }\n\n  /** @docs-private */\n  showColumn(column: string): void {\n    this.columnsService.showColumn(column);\n  }\n}\n\n/**\n * Cell definition for a nb-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridCellDef]',\n  providers: [{ provide: NbCdkCellDef, useExisting: NbTreeGridCellDefDirective }],\n})\nexport class NbTreeGridCellDefDirective extends NbCellDefDirective {}\n\n/**\n * Header cell definition for the nb-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridHeaderCellDef]',\n  providers: [{ provide: NbCdkHeaderCellDef, useExisting: NbTreeGridHeaderCellDefDirective }],\n})\nexport class NbTreeGridHeaderCellDefDirective extends NbHeaderCellDefDirective {}\n\n/**\n * Footer cell definition for the nb-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[nbTreeGridFooterCellDef]',\n  providers: [{ provide: NbCdkFooterCellDef, useExisting: NbTreeGridFooterCellDefDirective }],\n})\nexport class NbTreeGridFooterCellDefDirective extends NbFooterCellDefDirective {}\n"]}