{"version":3,"file":"progress-bar.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/progress-bar/progress-bar.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2DG;AAaH;IAZA;QAcE;;;;WAIG;QACM,UAAK,GAAW,CAAC,CAAC;QAc3B;;;WAGG;QACM,iBAAY,GAAY,KAAK,CAAC;IAEzC,CAAC;IApBU;QAAR,KAAK,EAAE;;yDAAmB;IAMlB;QAAR,KAAK,EAAE;;0DAAgB;IAMf;QAAR,KAAK,EAAE;;wDAAc;IAMb;QAAR,KAAK,EAAE;;gEAA+B;IAzB5B,sBAAsB;QAZlC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,CAAC,8BAA8B,CAAC;YAC3C,QAAQ,EAAE,iSAOT;SACF,CAAC;OACW,sBAAsB,CA2BlC;IAAD,6BAAC;CAAA,AA3BD,IA2BC;SA3BY,sBAAsB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input } from '@angular/core';\n\n/**\n * Progress Bar is a component for indicating progress.\n *\n * Simple usage:\n *\n * ```html\n * <nb-progress-bar [value]=\"50\"></nb-progress-bar>\n * ```\n * ### Installation\n *\n * Import `NbProgressBarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbProgressBarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Progress bar accepts property `value` in range 0-100\n * @stacked-example(Progress bar, progress-bar/progress-bar-showcase.component)\n *\n * Progress bar background could be configured by providing a `status` property:\n * @stacked-example(Progress bar status, progress-bar/progress-bar-status.component)\n *\n * Progress bar size (height and font-size) could be configured by providing a `size` property:\n * @stacked-example(Progress bar size, progress-bar/progress-bar-size.component)\n *\n * `displayValue` property shows current value inside progress bar. It's also possible to add custom text inside:\n * @stacked-example(Progress bar value, progress-bar/progress-bar-value.component)\n *\n * Progress bar supports `width` and `background-color` transition:\n * @stacked-example(Progress bar interactive, progress-bar/progress-bar-interactive.component)\n *\n * @styles\n *\n * progress-bar-height-xlg:\n * progress-bar-height-lg:\n * progress-bar-height:\n * progress-bar-height-sm:\n * progress-bar-height-xs:\n * progress-bar-font-size-xlg:\n * progress-bar-font-size-lg:\n * progress-bar-font-size:\n * progress-bar-font-size-sm:\n * progress-bar-font-size-xs:\n * progress-bar-radius:\n * progress-bar-bg-color:\n * progress-bar-font-color:\n * progress-bar-font-weight:\n * progress-bar-default-bg-color:\n * progress-bar-primary-bg-color:\n * progress-bar-success-bg-color:\n * progress-bar-info-bg-color:\n * progress-bar-warning-bg-color:\n * progress-bar-danger-bg-color:\n */\n@Component({\n  selector: 'nb-progress-bar',\n  styleUrls: ['./progress-bar.component.css'],\n  template: `\n    <div class=\"progress-container {{ size ? '' + size : '' }}\">\n      <div class=\"progress-value {{ status ? '' + status : '' }}\" [style.width.%]=\"value\">\n        <span *ngIf=\"displayValue\">{{ value }}%</span>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n})\nexport class NbProgressBarComponent {\n\n  /**\n   * Progress bar value in percent (0 - 100)\n   * @type {number}\n   * @private\n   */\n  @Input() value: number = 0;\n\n  /**\n   * Progress bar background (primary, info success, warning, danger)\n   * @param {string} val\n   */\n  @Input() status: string;\n\n  /**\n   * Progress bar size (xs, sm, lg, xlg)\n   * @param {string} val\n   */\n  @Input() size: string;\n\n  /**\n   * Displays value inside progress bar\n   * @param {string} val\n   */\n  @Input() displayValue: boolean = false;\n\n}\n"]}