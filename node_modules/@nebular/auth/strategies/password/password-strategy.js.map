{"version":3,"file":"password-strategy.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/strategies/password/password-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\n\nimport { NbAuthResult } from '../../services/auth-result';\nimport { NbAuthStrategy } from '../auth-strategy';\nimport { NbAuthStrategyClass } from '../../auth.options';\nimport { NbPasswordAuthStrategyOptions, passwordStrategyOptions } from './password-strategy-options';\nimport { NbAuthIllegalTokenError } from '../../services/token/token';\n\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    requireValidToken: false,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'register',\n *    method: 'post',\n *    requireValidToken: false,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    requireValidToken: false,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\n@Injectable()\nexport class NbPasswordAuthStrategy extends NbAuthStrategy {\n\n  protected defaultOptions: NbPasswordAuthStrategyOptions = passwordStrategyOptions;\n\n  static setup(options: NbPasswordAuthStrategyOptions): [NbAuthStrategyClass, NbPasswordAuthStrategyOptions] {\n    return [NbPasswordAuthStrategy, options];\n  }\n\n  constructor(protected http: HttpClient, private route: ActivatedRoute) {\n    super();\n  }\n\n  authenticate(data?: any): Observable<NbAuthResult> {\n    const module = 'login';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse(data);\n          }\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options),\n            this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }),\n        catchError((res) => {\n          return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    const module = 'register';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options),\n            this.createToken(this.getOption('token.getter')('login', res, this.options), requireValidToken));\n        }),\n        catchError((res) => {\n          return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    const module = 'requestPass';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options));\n        }),\n        catchError((res) => {\n        return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n\n    const module = 'resetPass';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const tokenKey = this.getOption(`${module}.resetPasswordTokenKey`);\n    data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options));\n        }),\n        catchError((res) => {\n          return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  logout(): Observable<NbAuthResult> {\n\n    const module = 'logout';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n\n    return observableOf({})\n      .pipe(\n        switchMap((res: any) => {\n          if (!url) {\n            return observableOf(res);\n          }\n          return this.http.request(method, url, {observe: 'response'});\n        }),\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse();\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options));\n        }),\n        catchError((res) => {\n          return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  refreshToken(data?: any): Observable<NbAuthResult> {\n\n    const module = 'refreshToken';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n\n    return this.http.request(method, url, {body: data, observe: 'response'})\n      .pipe(\n        map((res) => {\n          if (this.getOption(`${module}.alwaysFail`)) {\n            throw this.createFailResponse(data);\n          }\n\n          return res;\n        }),\n        map((res) => {\n          return new NbAuthResult(\n            true,\n            res,\n            this.getOption(`${module}.redirect.success`),\n            [],\n            this.getOption('messages.getter')(module, res, this.options),\n            this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }),\n        catchError((res) => {\n          return this.handleResponseError(res, module);\n        }),\n      );\n  }\n\n  protected handleResponseError(res: any, module: string): Observable<NbAuthResult> {\n    let errors = [];\n    if (res instanceof HttpErrorResponse) {\n      errors = this.getOption('errors.getter')(module, res, this.options);\n    } else if (res instanceof NbAuthIllegalTokenError) {\n      errors.push(res.message)\n    } else {\n      errors.push('Something went wrong.');\n    }\n    return observableOf(\n      new NbAuthResult(\n        false,\n        res,\n        this.getOption(`${module}.redirect.failure`),\n        errors,\n      ));\n  }\n\n}\n"]}